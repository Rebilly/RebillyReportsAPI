{
  "openapi": "3.0.0",
  "info": {
    "version": "0.1",
    "title": "Rebilly Experimental Reports REST API",
    "contact": {
      "name": "Rebilly API Support",
      "url": "https://www.rebilly.com/contact/",
      "email": "integrations@rebilly.com"
    },
    "license": {
      "name": "Rebilly",
      "url": "https://my.rebilly.com/api/license/"
    },
    "termsOfService": "https://www.rebilly.com/terms/",
    "x-logo": {
      "url": "https://rebilly.github.io/RebillyAPI/rb_apiLogo.svg",
      "backgroundColor": "#0033A0"
    }
  },
  "tags": [
    {
      "name": "Introduction",
      "description": "This API is experimental and likely to change.  We would appreciate\nfeedback.\n"
    },
    {
      "name": "Authentication",
      "description": "When you sign up for an account, you are given your first API key. You can generate additional API keys, and delete API keys (as you may need to rotate your keys in the future). You authenticate to the Rebilly API by providing your secret key in the request header.\nRebilly offers three forms of authentication:  private key, JSON Web Tokens, and public key. - private key: authenticates each request by searching for the presence of an HTTP header: REB-APIKEY. - JWT: authenticates each request by the HTTP header: Authorization. - public key: authenticates by the HTTP header: REB-AUTH (read more on this below).\nRebilly also offers JSON Web Tokens (JWT) authentication, where you can control the specific granular permissions and expiration for that JWT.  We call our resource for generating JWT [Sessions](#tag/Sessions).\nRebilly also has a client-side authentication scheme that uses an apiUser and HMAC-SHA1 signature (only for the Tokens resource), so that you may safely create tokens from the client-side without compromising your secret keys.\nNever share your secret keys. Keep them guarded and secure. The client-side authentication scheme uses one HTTP header named REB-AUTH.\n"
    },
    {
      "name": "Histograms",
      "description": "Histograms are for particular kinds of reports with cohorts and periods.\n"
    },
    {
      "name": "Reports",
      "description": "Retrieve summary information about your customers, subscriptions, transactions, and more.\n"
    },
    {
      "name": "Data Exports",
      "description": "Data exports.\n"
    },
    {
      "name": "Activity Feed",
      "description": "Activity Feed is holding various events that occurred in the app.\n"
    }
  ],
  "security": [
    {
      "ApiKey": []
    }
  ],
  "servers": [
    {
      "url": "https://api.rebilly.com/experimental"
    }
  ],
  "paths": {
    "/customers/{customerId}/summary-metrics": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Retrieve customer lifetime summary metrics",
        "operationId": "GetCustomerSummaryMetricReport",
        "description": "Retrieve customer lifetime summary metrics\n",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "Customer's ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metrics were retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInformation"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/data-exports": {
      "post": {
        "tags": [
          "Data Exports"
        ],
        "summary": "Request a data export of selected resource",
        "operationId": "PostDataExport",
        "description": "Request a data export of selected resource\n",
        "requestBody": {
          "$ref": "#/components/requestBodies/DataExport"
        },
        "responses": {
          "201": {
            "description": "Data export request received",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExport"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          },
          "422": {
            "description": "Invalid data was sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Data Exports"
        ],
        "summary": "Retrieve a list of data export requests",
        "operationId": "GetDataExportCollection",
        "description": "Retrieve a list of data export requests\n",
        "responses": {
          "200": {
            "description": "A list of data export requests was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataExport"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/data-exports/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "get": {
        "tags": [
          "Data Exports"
        ],
        "summary": "Retrieve a data export request",
        "operationId": "GetDataExport",
        "description": "Retrieve a data export request\n",
        "responses": {
          "200": {
            "description": "Data Export request",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExport"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Data Exports"
        ],
        "summary": "Modify a data export",
        "operationId": "PutDataExport",
        "description": "A data export may be changed as long as it is still pending\n",
        "requestBody": {
          "$ref": "#/components/requestBodies/DataExport"
        },
        "responses": {
          "200": {
            "description": "Data Export was modified",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExport"
                }
              }
            }
          },
          "201": {
            "description": "Data Export was created",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataExport"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          },
          "422": {
            "description": "Invalid data was sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Data Exports"
        ],
        "summary": "Delete a data export",
        "operationId": "DeleteDataExport",
        "description": "Delete an existing data export\n",
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/histograms/transactions": {
      "get": {
        "tags": [
          "Histograms"
        ],
        "summary": "Get Transaction histogram report data",
        "operationId": "GetHistogramTransactionReport",
        "description": "Get Transaction histogram report data.\n",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start day",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end day",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report aggregation field",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "website",
                "currency",
                "bin",
                "rebillNumber",
                "transactionResult",
                "transactionType",
                "gatewayAccount",
                "leadsAffiliate",
                "leadsCampaign",
                "leadsContent",
                "leadsMedium",
                "leadsSalesAgent",
                "leadsSource",
                "leadsSubAffiliate",
                "leadsTerm"
              ]
            }
          },
          {
            "name": "aggregationPeriod",
            "in": "query",
            "description": "Report aggregation period",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "hour",
                "day",
                "month"
              ]
            }
          },
          {
            "name": "metric",
            "in": "query",
            "description": "Report metric",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ApprovalThroughput",
                "AuthApprovalThroughput",
                "AvgSalesPrice",
                "Refunds",
                "RefundCount",
                "Sales",
                "SalesCount"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction report was retrieved successfully.",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistogramData"
                }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "post": {
        "deprecated": true,
        "tags": [
          "Organizations"
        ],
        "summary": "Create an organization",
        "operationId": "PostOrganization",
        "description": "Create an organization\n",
        "security": [
          {
            "JWT": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostOrganization"
        },
        "responses": {
          "201": {
            "description": "Organization was created",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          },
          "422": {
            "$ref": "#/components/responses/InvalidDataError"
          }
        }
      }
    },
    "/organizations/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/resourceId"
        }
      ],
      "patch": {
        "deprecated": true,
        "tags": [
          "Organizations"
        ],
        "summary": "Update an organization",
        "operationId": "PutOrganization",
        "description": "Update an organization with predefined identifier string\n",
        "security": [
          {
            "JWT": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PatchOrganization"
        },
        "responses": {
          "200": {
            "description": "Organization was updated",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          },
          "422": {
            "$ref": "#/components/responses/InvalidDataError"
          }
        }
      }
    },
    "/report/payments-success-by-decline-reason": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a report of payments successful retries throughput",
        "operationId": "GetPaymentSuccessByDeclineReasonReport",
        "description": "Retrieve a report of payments successful retries throughput",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start day",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end day",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          },
          {
            "$ref": "#/components/parameters/collectionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportPaymentsSuccessfulRetries"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/api-log-summary": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a API Log Summary Report",
        "operationId": "GetApiLogSummaryReport",
        "description": "Retrieve a API Log Summary Report",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APILogSummary"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/cumulative-subscriptions-plans": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a cumulative subscriptions plans report",
        "operationId": "GetCumulativeSubscriptionPlanReport",
        "description": "Retrieve a cumulative subscriptions report aggregated by day and plans",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          },
          {
            "$ref": "#/components/parameters/collectionFilter"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The response media type",
            "schema": {
              "type": "string",
              "enum": [
                "application/json",
                "text/csv"
              ],
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CumulativeSubscriptionsPlans"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CumulativeSubscriptionsPlans"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/cumulative-subscriptions": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a cumulative subscriptions report",
        "operationId": "GetCumulativeSubscriptionReport",
        "description": "Retrieve a cumulative subscriptions report",
        "parameters": [
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report aggregation field",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "month"
              ]
            }
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          },
          {
            "$ref": "#/components/parameters/collectionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CumulativeSubscriptions"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/dashboard": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve dashboard data",
        "operationId": "GetDashboardReport",
        "description": "Retrieve dashboard data",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start day",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end day",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "metrics",
            "in": "query",
            "description": "Comma-separated list of metrics",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "segments",
            "in": "query",
            "description": "Dashboard report segments as a JSON array",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/reportTimezone"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/dcc-markup": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a DCC markup report",
        "operationId": "GetDccMarkupReport",
        "description": "Retrieve a DCC markup report",
        "parameters": [
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report aggregation field",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "month",
                "bin",
                "country",
                "baseCurrency",
                "quoteCurrency"
              ]
            }
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          },
          {
            "$ref": "#/components/parameters/collectionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DccMarkup"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/disputes": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a disputes report",
        "operationId": "GetDisputeReport",
        "description": "Retrieve a disputes report\n",
        "parameters": [
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report will be aggregated by this field",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "website",
                "gatewayAcquirer",
                "currency",
                "bin",
                "country",
                "rebillNumber",
                "retryNumber",
                "gatewayAccount",
                "transactionAmount"
              ]
            }
          },
          {
            "name": "periodMonth",
            "in": "query",
            "description": "Report month in format YYYY-MM",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          },
          {
            "$ref": "#/components/parameters/collectionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDisputes"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/events-triggered": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a events triggered summary report",
        "operationId": "GetTriggeredEventReport",
        "description": "Retrieve a events triggered summary report.\n",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportEventsTriggeredSummary"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/events-triggered/{eventType}/rules": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a rules matched summary report",
        "operationId": "GetTriggeredEventRuleReport",
        "description": "Retrieve a rules matched summary report by events triggered.\n",
        "parameters": [
          {
            "name": "eventType",
            "in": "path",
            "required": true,
            "description": "The system event type",
            "schema": {
              "type": "string",
              "enum": [
                "dispute-created",
                "gateway-account-requested",
                "transaction-processed",
                "subscription-canceled",
                "subscription-renewed",
                "payment-card-expired",
                "payment-declined",
                "transaction-process-requested",
                "risk-score-changed"
              ]
            }
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportRulesMatchedSummary"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/future-renewals": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a future renewals report",
        "operationId": "GetFutureRenewalReport",
        "description": "Retrieve a future renewals report",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date. It should be in the future",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FutureRenewals"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/renewal-sales": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a renewal sales report",
        "operationId": "GetRenewalSaleReport",
        "description": "Retrieve a renewal sales report\n",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RenewalSales"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/retention-percentage": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a retention percentage report",
        "operationId": "GetRetentionPercentageReport",
        "description": "Retrieve a retention percentage report\n",
        "parameters": [
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report aggregation field",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "month",
                "quarter",
                "year"
              ]
            }
          },
          {
            "name": "aggregationPeriod",
            "in": "query",
            "description": "Report aggregation period",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "month",
                "quarter",
                "year",
                "cycle"
              ]
            }
          },
          {
            "name": "includeSwitchedSubscriptions",
            "in": "query",
            "description": "If to include switched subscriptions",
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            }
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          },
          {
            "$ref": "#/components/parameters/collectionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportRetentionPercentage"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/retention-value": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a retention value report",
        "operationId": "GetRetentionValueReport",
        "description": "The retention value report shows the count of new customers\nper aggregation bucket and the corresponding per customer value over time.\n",
        "parameters": [
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report aggregation field",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "month",
                "quarter",
                "year",
                "leadsSource",
                "leadsMedium",
                "leadsCampaign",
                "leadsContent",
                "leadsTerm",
                "leadsAffiliate",
                "leadsSubAffiliate",
                "leadsSalesAgent"
              ]
            }
          },
          {
            "name": "aggregationPeriod",
            "in": "query",
            "description": "Report aggregation period",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "month",
                "quarter",
                "year"
              ]
            }
          },
          {
            "name": "includeRefunds",
            "in": "query",
            "description": "If to include refunds",
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            }
          },
          {
            "name": "includeDisputes",
            "in": "query",
            "description": "If to include disputes",
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            }
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          },
          {
            "$ref": "#/components/parameters/collectionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportRetentionValue"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/retry-transaction": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a payment retry report",
        "operationId": "GetTransactionRetryReport",
        "description": "Retrieve a payment retry report\n",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "$ref": "#/components/parameters/collectionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportPaymentRetry"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/statistics": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a statistics report",
        "operationId": "GetStatisticReport",
        "description": "Retrieve a statistics report\n",
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportStatistics"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/subscription-cancellation": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve transactions with their plan data",
        "operationId": "GetSubscriptionCancellationReport",
        "description": "Retrieve transactions with their plan data",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report aggregation field",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "planId",
                "websiteId",
                "canceledBy",
                "cancelCategory",
                "leadSource.source",
                "leadSource.medium",
                "leadSource.campaign",
                "leadSource.content",
                "leadSource.term",
                "leadSource.affiliate",
                "leadSource.subAffiliate",
                "leadSource.salesAgent"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          },
          {
            "$ref": "#/components/parameters/collectionFilter"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The response media type",
            "schema": {
              "type": "string",
              "enum": [
                "application/json"
              ],
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCancellationReport"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/subscription-renewal-list": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a list of subscription renewals data",
        "operationId": "GetSubscriptionRenewalListReport",
        "description": "Retrieve a list of subscription renewals data",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The response media type",
            "schema": {
              "type": "string",
              "enum": [
                "application/json",
                "text/csv"
              ],
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRenewalList"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRenewalList"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/subscription-renewal": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a subscription renewal report",
        "operationId": "GetSubscriptionRenewalReport",
        "description": "Retrieve a subscription renewal report",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionRenewal"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/time-series-transaction": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a time series transactions report",
        "operationId": "GetTimeSeriesTransactionReport",
        "description": "Retrieve a transactions report aggregated by time periods",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Report aggregation type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "count",
                "amount",
                "approval-rate",
                "incomplete-rate"
              ]
            }
          },
          {
            "name": "subaggregate",
            "in": "query",
            "description": "Report subaggregate",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "website",
                "gateway-account",
                "currency",
                "plan",
                "leads.source",
                "leads.medium",
                "leads.campaign",
                "leads.content",
                "leads.term",
                "leads.affiliate",
                "leads.subaffiliate",
                "leads.sales-agent"
              ]
            }
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSeriesTransaction"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/transactions-plan": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve transactions with their plan data",
        "operationId": "GetTransactionPlanReport",
        "description": "Retrieve transactions with their plan data",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "The response media type",
            "schema": {
              "type": "string",
              "enum": [
                "application/json",
                "text/csv"
              ],
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsPlan"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsPlan"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/transactions-time-dispute": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a dispute delays in days report",
        "operationId": "GetTransactionTimeDisputeReport",
        "description": "Retrieve a dispute delays in days report, how much time between a transaction and a dispute.\n",
        "parameters": [
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report will be aggregated by this field",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "website",
                "processor",
                "currency",
                "bin",
                "country",
                "rebillNumber",
                "retryNumber",
                "gatewayAccount",
                "transactionAmount"
              ]
            }
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          },
          {
            "$ref": "#/components/parameters/collectionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDisputeDelays"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/transactions": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a transactions report",
        "operationId": "GetTransactionReport",
        "description": "Retrieve a transactions report",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start day",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end day",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report aggregation field",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "website",
                "currency",
                "bin",
                "rebillNumber",
                "transactionResult",
                "transactionType",
                "gatewayAccount",
                "gateway",
                "retryNumber",
                "plan",
                "leadSource.source",
                "leadSource.medium",
                "leadSource.campaign",
                "leadSource.content",
                "leadSource.term",
                "leadSource.affiliate",
                "leadSource.subAffiliate",
                "leadSource.salesAgent"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/collectionLimit"
          },
          {
            "$ref": "#/components/parameters/collectionOffset"
          },
          {
            "$ref": "#/components/parameters/collectionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              },
              "Pagination-Total": {
                "$ref": "#/components/headers/Pagination-Total"
              },
              "Pagination-Limit": {
                "$ref": "#/components/headers/Pagination-Limit"
              },
              "Pagination-Offset": {
                "$ref": "#/components/headers/Pagination-Offset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportTransactions"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/summary-metrics": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Retrieve subscription summary metrics",
        "operationId": "GetSubscriptionSummaryMetricReport",
        "description": "Retrieve subscription summary metrics\n",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "Subscription's ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metrics were retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "$ref": "#/components/headers/Rate-Limit-Limit"
              },
              "Rate-Limit-Remaining": {
                "$ref": "#/components/headers/Rate-Limit-Remaining"
              },
              "Rate-Limit-Reset": {
                "$ref": "#/components/headers/Rate-Limit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionSummaryMetrics"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APILogSummary": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "The number of requests per each method.",
              "readOnly": true,
              "properties": {
                "route": {
                  "type": "string",
                  "description": "Route string pattern"
                },
                "total": {
                  "type": "integer",
                  "description": "Total count of requests"
                },
                "get": {
                  "type": "integer",
                  "description": "Count of GET requests."
                },
                "post": {
                  "type": "integer",
                  "description": "Count of POST requests."
                },
                "put": {
                  "type": "integer",
                  "description": "Count of PUT requests."
                },
                "patch": {
                  "type": "integer",
                  "description": "Count of PATCH requests."
                },
                "delete": {
                  "type": "integer",
                  "description": "Count of DELETE requests."
                },
                "head": {
                  "type": "integer",
                  "description": "Count of HEAD requests."
                },
                "options": {
                  "type": "integer",
                  "description": "Count of OPTIONS requests."
                }
              }
            }
          }
        }
      },
      "CumulativeSubscriptions": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Contains an aggregation",
              "readOnly": true,
              "properties": {
                "aggregationValue": {
                  "type": "string",
                  "description": "Date in format YYYY-MM (monthly aggregation) or YYYY-MM-DD (daily aggregation)"
                },
                "newCount": {
                  "type": "integer",
                  "description": "Number of new subscriptions within the aggregation"
                },
                "canceledCount": {
                  "type": "integer",
                  "description": "Number of canceled subscriptions within the aggregation"
                },
                "cumulativeCount": {
                  "type": "integer",
                  "description": "Number of cumulative subscriptions from the previous aggregation +\nnumber of new subscriptions - number of canceled subscriptions within the aggregation.\n"
                }
              }
            }
          }
        }
      },
      "CumulativeSubscriptionsPlans": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "Contains an aggregation",
          "readOnly": true,
          "properties": {
            "day": {
              "type": "string",
              "description": "Date in format YYYY-MM-DD"
            },
            "month": {
              "type": "integer",
              "description": "Date in format YYYY-MM"
            },
            "planId": {
              "type": "integer",
              "description": "Plan id for which the aggregation is given"
            },
            "newCount": {
              "type": "integer",
              "description": "Number of new subscriptions within the aggregation"
            },
            "canceledCount": {
              "type": "integer",
              "description": "Number of canceled subscriptions within the aggregation"
            },
            "netCount": {
              "type": "integer",
              "description": "newCount - canceledCount"
            },
            "cumulativeCount": {
              "type": "integer",
              "description": "Number of cumulative subscriptions from the previous aggregation +\nnumber of new subscriptions - number of canceled subscriptions within the aggregation.\n"
            }
          }
        }
      },
      "CustomerInformation": {
        "type": "object",
        "properties": {
          "currency": {
            "description": "Currency (three letter ISO 4217 alpha code) (eg USD, EUR)",
            "readOnly": true,
            "type": "string"
          },
          "refundsAmount": {
            "description": "Sum of all refunded transactions",
            "readOnly": true,
            "type": "number",
            "format": "double"
          },
          "revenueAmount": {
            "description": "Sum of overall sales and captures that were approved",
            "readOnly": true,
            "type": "number",
            "format": "double"
          },
          "disputesAmount": {
            "description": "Sum of all disputed transactions",
            "readOnly": true,
            "type": "number",
            "format": "double"
          }
        }
      },
      "DashboardResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "metric": {
              "type": "string",
              "description": "Metric type",
              "enum": [
                "approvalRate",
                "salesCount",
                "salesValue",
                "refundsValue"
              ]
            },
            "humanName": {
              "type": "string",
              "description": "Metric name to display"
            },
            "increaseIsGood": {
              "type": "boolean",
              "description": "True when the higher value means a better performance thus positive for a merchant, false otherwise"
            },
            "segments": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Segment name"
                  },
                  "value": {
                    "type": "number",
                    "format": "double",
                    "description": "Segment value for the given date range"
                  },
                  "previousValue": {
                    "type": "number",
                    "format": "double",
                    "description": "Segment value for the previous date range (relative to the given date range)"
                  },
                  "humanValue": {
                    "type": "string",
                    "description": "Human readable segment value (formatted with a currency sign)"
                  },
                  "changeRatio": {
                    "type": "number",
                    "format": "double",
                    "description": "Ratio of current value per previous value null is infinity"
                  },
                  "humanChangeRatio": {
                    "type": "string",
                    "description": "Human readable change ratio (formatted percentage with a \"%\" sign), null is infinity"
                  },
                  "timeseries": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Chart data",
                      "readOnly": true,
                      "properties": {
                        "date": {
                          "type": "string",
                          "description": "Entry date-time"
                        },
                        "value": {
                          "type": "number",
                          "description": "Entry value"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "DataExport": {
        "type": "object",
        "discriminator": {
          "propertyName": "resource"
        },
        "required": [
          "name",
          "format",
          "resource"
        ],
        "properties": {
          "id": {
            "description": "The export identifier string",
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceId"
              }
            ]
          },
          "name": {
            "description": "Export name",
            "type": "string"
          },
          "resource": {
            "description": "The type of resource being exported (eg., transactions).",
            "type": "string",
            "enum": [
              "transactions",
              "customers",
              "subscriptions"
            ]
          },
          "format": {
            "description": "Export result format",
            "type": "string",
            "enum": [
              "csv",
              "json",
              "json-api",
              "xml"
            ]
          },
          "arguments": {
            "description": "Export request arguments that can be passed to filter and/or sort the result set. See the [arguments guide](https://docs-reconciliation.rebilly.com/getting-started/arguments) for more options and examples.",
            "type": "object",
            "properties": {
              "filter": {
                "description": "The collection items filter requires a special format. Use \",\" for multiple allowed values. Use \";\" for multiple fields.",
                "type": "string"
              },
              "sort": {
                "type": "string",
                "description": "The collection items sort field and order (prefix with \"-\" for descending sort)."
              },
              "q": {
                "type": "string",
                "description": "The partial search of the text fields."
              }
            }
          },
          "dateRange": {
            "type": "object",
            "description": "The date range (can be in relative formats).  If omitted, all time will be included. See the [Date Range guide](https://docs-reconciliation.rebilly.com/getting-started/date-range) for more options and examples.",
            "properties": {
              "start": {
                "type": "string",
                "description": "Any valid datetime arguments including [relative datetime arguments](http://php.net/manual/en/datetime.formats.php).",
                "example": "yesterday"
              },
              "end": {
                "type": "string",
                "description": "Any valid datetime arguments including [relative datetime arguments](http://php.net/manual/en/datetime.formats.php).",
                "example": "today"
              },
              "field": {
                "type": "string",
                "description": "The field to apply date range to."
              }
            },
            "required": [
              "start",
              "end"
            ]
          },
          "emailNotification": {
            "description": "List of emails to be notified when export is completed",
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "fields": {
            "description": "List of fields to include in the export.  See supporting documentation for more info.  If omitted, default fields will be included.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recurring": {
            "description": "Exports can reoccur according to your own schedule",
            "type": "object",
            "required": [
              "instruction"
            ],
            "properties": {
              "instruction": {
                "type": "string",
                "description": "RRule RFC 5545 formatted string used for recurring exports"
              },
              "start": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time when the first recurring scheduled export will occur. Defaults to now."
              }
            }
          },
          "userId": {
            "description": "The ID of the User who requested the data export",
            "readOnly": true,
            "type": "string"
          },
          "recordCount": {
            "description": "The number of records in the export (excluding the header row)",
            "readOnly": true,
            "type": "integer"
          },
          "scheduledTime": {
            "description": "The date and time this data export is scheduled to generate a file",
            "allOf": [
              {
                "$ref": "#/components/schemas/ServerTimestamp"
              }
            ]
          },
          "createdTime": {
            "description": "The time the data export was requested",
            "allOf": [
              {
                "$ref": "#/components/schemas/ServerTimestamp"
              }
            ]
          },
          "updatedTime": {
            "description": "Data export updated time",
            "allOf": [
              {
                "$ref": "#/components/schemas/ServerTimestamp"
              }
            ]
          },
          "status": {
            "description": "Status of export request",
            "readOnly": true,
            "type": "string",
            "enum": [
              "pending",
              "queued",
              "processing",
              "completed"
            ]
          },
          "_links": {
            "type": "array",
            "description": "The links related to resource",
            "readOnly": true,
            "minItems": 1,
            "maxItems": 4,
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LinkSelf"
                },
                {
                  "$ref": "#/components/schemas/LinkUser"
                },
                {
                  "$ref": "#/components/schemas/LinkFileDownload"
                },
                {
                  "$ref": "#/components/schemas/LinkSignedLink"
                }
              ]
            }
          }
        }
      },
      "customers": {
        "description": "Customers resource type to export",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataExport"
          },
          {
            "type": "object",
            "properties": {
              "dateRange": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "default": "createdTime",
                    "example": "createdTime"
                  }
                }
              }
            }
          }
        ]
      },
      "subscriptions": {
        "description": "Subscriptions resource type to export",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataExport"
          },
          {
            "type": "object",
            "properties": {
              "dateRange": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "default": "createdTime",
                    "example": "createdTime"
                  }
                }
              }
            }
          }
        ]
      },
      "transactions": {
        "description": "Transactions resource type to export",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataExport"
          },
          {
            "type": "object",
            "properties": {
              "dateRange": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "default": "processedTime",
                    "example": "processedTime"
                  }
                }
              }
            }
          }
        ]
      },
      "DccMarkup": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Contains an aggregation",
              "readOnly": true,
              "properties": {
                "aggregationValue": {
                  "type": "string",
                  "description": "Value by which the report provides aggregated data.\nThe date values are displayed as following: Day: YYYY-MM-DD; Month: YYYY-MM.\n"
                },
                "selectedCount": {
                  "type": "integer",
                  "description": "Number of selected offers in the aggregation"
                },
                "selectedSum": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount of selected offers in the aggregation"
                },
                "rejectedCount": {
                  "type": "integer",
                  "description": "Number of rejected offers in the aggregation"
                },
                "rejectedSum": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount of rejected offers in the aggregation"
                },
                "unknownCount": {
                  "type": "integer",
                  "description": "Number of offers in the aggregation which weren't selected nor rejected"
                },
                "unknownSum": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount of offers in the aggregation which weren't selected nor rejected"
                }
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "minimum": 100,
            "maximum": 600,
            "description": "The HTTP status code."
          },
          "error": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\"."
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization."
          }
        }
      },
      "FutureRenewals": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Contains an aggregation",
              "readOnly": true,
              "properties": {
                "date": {
                  "type": "string",
                  "description": "Date in format YYYY-MM"
                },
                "sum": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount of future renewals in user's reporting currency"
                },
                "plansCount": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Plan within the aggregation",
                    "readOnly": true,
                    "properties": {
                      "planId": {
                        "description": "Plan identifier",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/ResourceId"
                          }
                        ]
                      },
                      "count": {
                        "type": "integer",
                        "description": "Amount of plan's future renewals"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "HistogramData": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Contains date-time and value",
              "readOnly": true,
              "properties": {
                "date": {
                  "type": "string",
                  "description": "Entry date-time"
                },
                "value": {
                  "type": "number",
                  "description": "Entry value"
                }
              }
            }
          }
        }
      },
      "InvalidError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "invalidFields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "The field name. Dot notation is used for nested object field names."
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": [
                  {
                    "field": "field1",
                    "message": "field1 is invalid"
                  },
                  {
                    "field": "subObject.field2",
                    "message": "field2 is invalid"
                  },
                  {
                    "field": "subObject.field2",
                    "message": "another error in the field2"
                  }
                ]
              }
            }
          }
        ]
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "description": "The link URL",
            "type": "string"
          }
        },
        "required": [
          "href"
        ]
      },
      "LinkFileDownload": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Link"
          }
        ],
        "properties": {
          "rel": {
            "description": "The link type",
            "type": "string",
            "enum": [
              "download"
            ]
          }
        },
        "required": [
          "rel"
        ]
      },
      "LinkSelf": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Link"
          }
        ],
        "properties": {
          "rel": {
            "description": "The link type",
            "type": "string",
            "enum": [
              "self"
            ]
          }
        },
        "required": [
          "rel"
        ]
      },
      "LinkSignedLink": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Link"
          }
        ],
        "properties": {
          "rel": {
            "description": "The link type",
            "type": "string",
            "enum": [
              "signedLink"
            ]
          }
        },
        "required": [
          "rel"
        ]
      },
      "LinkUser": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Link"
          }
        ],
        "properties": {
          "rel": {
            "description": "The link type",
            "type": "string",
            "enum": [
              "user"
            ]
          }
        },
        "required": [
          "rel"
        ]
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The Organization identifier string",
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceId"
              }
            ]
          },
          "name": {
            "description": "The organization name.  It must be unique globally within Rebilly.",
            "type": "string"
          },
          "email": {
            "description": "The organization email",
            "type": "string",
            "format": "email",
            "maxLength": 100
          },
          "status": {
            "description": "The organization status",
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "pending-confirmation"
            ],
            "readOnly": true
          },
          "address": {
            "description": "The organization street address",
            "type": "string",
            "maxLength": 60
          },
          "address2": {
            "description": "The organization street address",
            "type": "string",
            "maxLength": 60
          },
          "city": {
            "description": "The organization city",
            "type": "string",
            "maxLength": 45
          },
          "region": {
            "description": "The organization region (state)",
            "type": "string",
            "maxLength": 45
          },
          "country": {
            "description": "The organization country ISO Alpha-2 code",
            "type": "string",
            "pattern": "^[A-Z]{2}$"
          },
          "postalCode": {
            "description": "The organization postal code",
            "type": "string",
            "maxLength": 10
          },
          "phoneNumbers": {
            "$ref": "#/components/schemas/ContactPhoneNumbers"
          },
          "emails": {
            "$ref": "#/components/schemas/ContactEmails"
          },
          "taxDescriptor": {
            "description": "The organization's tax label. This will be displayed on the invoice.",
            "type": "string",
            "maxLength": 255
          },
          "invoiceTimeZone": {
            "description": "Invoice will use this time zone to display time otherwise UTC will be used. Example \"America/New_York\"",
            "type": "string",
            "maxLength": 50
          },
          "reportCurrency": {
            "description": "The currency used for reports. It can only be set upon organization creation.",
            "readOnly": true,
            "type": "string",
            "pattern": "^[A-Z]{3}$"
          }
        }
      },
      "ContactEmails": {
        "description": "The list of emails",
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "label",
            "value"
          ],
          "properties": {
            "label": {
              "description": "The email label",
              "type": "string"
            },
            "value": {
              "description": "The email value",
              "type": "string"
            },
            "primary": {
              "description": "True if email is primary",
              "type": "boolean"
            }
          }
        }
      },
      "ContactPhoneNumbers": {
        "description": "The list of phone numbers",
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "label",
            "value"
          ],
          "properties": {
            "label": {
              "description": "The phone label",
              "type": "string"
            },
            "value": {
              "description": "The phone value",
              "type": "string"
            },
            "primary": {
              "description": "True if phone is primary",
              "type": "boolean"
            }
          }
        }
      },
      "RenewalSales": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Contains an aggregation",
              "readOnly": true,
              "properties": {
                "aggregationValue": {
                  "type": "string",
                  "description": "Date in format YYYY-MM"
                },
                "newSales": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount of new sales"
                },
                "newRefunds": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount of new refunds"
                },
                "renewalSales": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount of renewal sales"
                },
                "renewalRefunds": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount of renewal refunds"
                }
              }
            }
          }
        }
      },
      "ReportDisputeDelays": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "aggregationFieldValue": {
                  "description": "Selected aggregation field value (defined by query). It can be, for example, website or country.\nYou define it in aggregationField param in query.\n",
                  "type": "string"
                },
                "25th": {
                  "description": "25th percentile",
                  "type": "integer"
                },
                "50th": {
                  "description": "50th percentile",
                  "type": "integer"
                },
                "75th": {
                  "description": "75th percentile",
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "ReportDisputes": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "aggregationValue": {
                  "description": "Selected aggregation field value (defined by query). It can be, for example, website or country.\nYou define it in aggregationField param in query.\n",
                  "type": "string"
                },
                "countVisa": {
                  "description": "Disputes count on Visa",
                  "type": "integer"
                },
                "ratioCountVisa": {
                  "description": "Disputes count / Settled transactions count",
                  "type": "number",
                  "format": "double"
                },
                "ratioAmountVisa": {
                  "description": "Disputes amount / Settled transactions amount",
                  "type": "number",
                  "format": "double"
                },
                "countMastercard": {
                  "description": "Disputes count on Mastercard",
                  "type": "integer"
                },
                "ratioCountMastercard": {
                  "description": "Disputes count / Settled transactions count",
                  "type": "number",
                  "format": "double"
                },
                "ratioAmountMastercard": {
                  "description": "Disputes amount / Settled transactions amount",
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      },
      "ReportEventsTriggeredSummary": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "eventName": {
                  "description": "System event name.\n",
                  "type": "string",
                  "enum": [
                    "dispute-created",
                    "gateway-account-requested",
                    "transaction-processed",
                    "subscription-canceled",
                    "subscription-renewed",
                    "payment-card-expired",
                    "payment-declined",
                    "transaction-process-requested",
                    "risk-score-changed"
                  ]
                },
                "count": {
                  "description": "Count of event triggered",
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "ReportPaymentRetry": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "retryNumber": {
                  "description": "Retry attempts number",
                  "type": "integer"
                },
                "attempts": {
                  "description": "Attempts count",
                  "type": "integer"
                },
                "successfulTransactions": {
                  "description": "Successful transactions count",
                  "type": "integer"
                },
                "successRate": {
                  "description": "Successful transactions ratio",
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      },
      "ReportPaymentsSuccessfulRetries": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Contains a report of payments successful retries throughput",
              "readOnly": true,
              "properties": {
                "declineCode": {
                  "type": "string",
                  "description": "Decline reason code"
                },
                "declineMessage": {
                  "type": "string",
                  "description": "Decline reason message"
                },
                "successfulRatio": {
                  "type": "number",
                  "format": "double",
                  "description": "Successful ratio"
                }
              }
            }
          }
        }
      },
      "ReportRetentionPercentage": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Contains an aggregation",
              "readOnly": true,
              "properties": {
                "aggregationValue": {
                  "type": "string",
                  "description": "Value by which the report provides retention periods and percentages.\nThe date values are displayed as following:\nDay: YYYY-MM-DD;\nMonth: YYYY-MM;\nQuarter: YYYY-MM/YYYY-MM;\nYear: YYYY.\n"
                },
                "subscriptionsCount": {
                  "type": "integer",
                  "description": "Number of subscriptions created within the aggregation"
                },
                "periods": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The period for the given aggregation",
                    "properties": {
                      "period": {
                        "type": "integer",
                        "description": "Retention period (0 - first, 1 - second etc) since the beginning boundary of the aggregation\n"
                      },
                      "retentionRatio": {
                        "type": "number",
                        "format": "double",
                        "description": "Ratio % of remaining subcriptions (not canceled) at the moment of retention period\nto all subscriptions created in the aggregation period\n"
                      },
                      "canceledSubscriptionsCount": {
                        "type": "integer",
                        "description": "Number of canceled subscriptions within the given retention period"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ReportRetentionValue": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Contains an aggregation",
              "readOnly": true,
              "properties": {
                "aggregationValue": {
                  "type": "string",
                  "description": "Value by which the report provides retention periods and values. The date values are displayed as following:\nDay: YYYY-MM-DD;\nMonth: YYYY-MM;\nQuarter: YYYY-MM/YYYY-MM;\nYear: YYYY.\n"
                },
                "customersCount": {
                  "type": "integer",
                  "description": "Number of customers within the aggregation with their first payment"
                },
                "periods": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The period for the given aggregation",
                    "properties": {
                      "period": {
                        "type": "integer",
                        "description": "Retention period (0 - first, 1 - second etc) since the beginning boundary of the aggregation\n"
                      },
                      "retentionAverage": {
                        "type": "number",
                        "format": "double",
                        "description": "Summary amount of all transactions for all periods up to the current one\ndivided by the aggregation customers number\n"
                      },
                      "transactionsCount": {
                        "type": "integer",
                        "description": "The number of transactions happened in the retention period (e.g. in 3 rebills)"
                      },
                      "transactionsValue": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount of transactions (income transactions - loss transactions)"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ReportRulesMatchedSummary": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rule": {
                  "description": "Rule matched name.\n",
                  "type": "string"
                },
                "count": {
                  "description": "Count of matched rule.",
                  "type": "integer"
                },
                "approvalRate": {
                  "description": "Transaction approval rate by rule.",
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      },
      "ReportStatistics": {
        "type": "object",
        "properties": {
          "revenue": {
            "description": "Revenue in last 24 hours",
            "type": "number",
            "format": "double"
          },
          "revenueGrowthPercentage": {
            "description": "Revenue growth (in percents) in last 24 hours (against previous 24 hours)",
            "type": "number",
            "format": "double"
          },
          "customers": {
            "description": "New customers count in last 24 hours",
            "type": "integer"
          },
          "customersGrowthPercentage": {
            "description": "Customers count growth (in percents) in last 24 hours (against previous 24 hours)",
            "type": "number",
            "format": "double"
          },
          "cancels": {
            "description": "Cancels count in last 24 hours",
            "type": "integer"
          },
          "cancelsGrowthPercentage": {
            "description": "Cancels count growth (in percents) in last 24 hours (against previous 24 hours)",
            "type": "number",
            "format": "double"
          },
          "refunds": {
            "description": "Refunds count",
            "type": "integer"
          },
          "refundsGrowthPercentage": {
            "description": "Refunds count growth (in percents) in last 24 hours (against previous 24 hours)",
            "type": "number",
            "format": "double"
          }
        }
      },
      "ReportTransactions": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "aggregationFieldValue": {
                  "description": "Selected aggregation field value",
                  "type": "string"
                },
                "authApprovedThroughput": {
                  "description": "Approved auth transactions to all transactions percentage",
                  "type": "integer"
                },
                "approvedThroughput": {
                  "description": "Approved sale transactions to all transactions percentage",
                  "type": "integer"
                },
                "authApprovalCount": {
                  "description": "Approved auth transactions count",
                  "type": "integer"
                },
                "disputesRate": {
                  "description": "Disputed transactions to all approved sale and capture transactions percentage",
                  "type": "integer"
                },
                "disputesCount": {
                  "description": "Disputed transactions to all approved sale and capture transactions count",
                  "type": "integer"
                },
                "salesCount": {
                  "description": "Sales count",
                  "type": "integer"
                },
                "salesValue": {
                  "description": "Sales value",
                  "type": "number",
                  "format": "double"
                },
                "salesAverage": {
                  "description": "Sales average value",
                  "type": "number",
                  "format": "double"
                },
                "refundsCount": {
                  "description": "Refunds count",
                  "type": "integer"
                },
                "refundsValue": {
                  "description": "Refunds value",
                  "type": "number",
                  "format": "double"
                },
                "amount": {
                  "description": "Amount",
                  "type": "number",
                  "format": "double"
                },
                "count": {
                  "description": "Transactions count",
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      },
      "ResourceId": {
        "type": "string",
        "description": "The resource ID. Defaults to UUID v4",
        "maxLength": 50,
        "example": "4f6cf35x-2c4y-483z-a0a9-158621f77a21"
      },
      "ServerTimestamp": {
        "type": "string",
        "description": "Read-only timestamp, automatically assigned on back-end.",
        "format": "date-time",
        "readOnly": true
      },
      "SubscriptionCancellationReport": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Contains an aggregation",
              "readOnly": true,
              "properties": {
                "aggregationValue": {
                  "type": "string",
                  "description": "Aggregation value"
                },
                "count": {
                  "type": "integer",
                  "description": "Count of canceled subscriptions"
                },
                "averageLength": {
                  "type": "number",
                  "format": "double",
                  "description": "Average length of canceled subscription from start to end within the aggregation in seconds"
                },
                "medianLength": {
                  "type": "number",
                  "format": "double",
                  "description": "Median length of canceled subscription from start to end within the aggregation in seconds"
                }
              }
            }
          }
        }
      },
      "SubscriptionRenewal": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Contains an aggregation",
              "readOnly": true,
              "properties": {
                "planId": {
                  "description": "Plan identifier for which subscriptions are counted",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResourceId"
                    }
                  ]
                },
                "allRenewalCount": {
                  "type": "integer",
                  "description": "All renewed subscriptions number"
                },
                "allDunningCount": {
                  "type": "integer",
                  "description": "All dunned subscriptions number"
                },
                "abandonedCount": {
                  "type": "integer",
                  "description": "Abandon subscriptions number"
                },
                "paidRenewalCount": {
                  "type": "integer",
                  "description": "Number of paid renewed subscriptions. Divide by allRenewalCount to know the renewal success rate"
                },
                "paidDunningCount": {
                  "type": "integer",
                  "description": "Number of paid dunned subscriptions. Divide by allDunningCount to know the dun success rate"
                },
                "refundedRenewalCount": {
                  "type": "integer",
                  "description": "Number of paid renewed subscriptions. Divide by allRenewalCount to know the renewal refund rate"
                },
                "refundedDunningCount": {
                  "type": "integer",
                  "description": "Number of paid dunned subscriptions. Divide by allDunningCount to know the dun refund rate"
                },
                "chargebackRenewalCount": {
                  "type": "integer",
                  "description": "Number of paid renewed subscriptions. Divide by allRenewalCount to know the renewal chargeback rate"
                },
                "chargebackDunningCount": {
                  "type": "integer",
                  "description": "Number of paid dunned subscriptions. Divide by allDunningCount to know the dun chargeback rate"
                }
              }
            }
          }
        }
      },
      "SubscriptionRenewalList": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "Contains a renewal data",
          "readOnly": true,
          "properties": {
            "invoiceId": {
              "description": "Invoice ID",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResourceId"
                }
              ]
            },
            "planId": {
              "description": "Plan ID",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResourceId"
                }
              ]
            },
            "subscriptionId": {
              "description": "Subscription ID",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResourceId"
                }
              ]
            },
            "customerId": {
              "description": "Customer ID",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResourceId"
                }
              ]
            },
            "paymentId": {
              "description": "Payment ID",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResourceId"
                }
              ]
            },
            "createdTime": {
              "description": "Invoice created time",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ServerTimestamp"
                }
              ]
            },
            "issuedTime": {
              "description": "Invoice issuing time",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ServerTimestamp"
                }
              ]
            },
            "dueTime": {
              "description": "Invoice due time",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ServerTimestamp"
                }
              ]
            },
            "closedTime": {
              "description": "Invoice closing time",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ServerTimestamp"
                }
              ]
            },
            "canceledTime": {
              "description": "Invoice canceling time",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ServerTimestamp"
                }
              ]
            },
            "recurringAmount": {
              "type": "number",
              "format": "double",
              "description": "Recurring amount of the related plan"
            },
            "recurringCurrency": {
              "type": "string",
              "description": "Recurring currency of the related plan"
            },
            "rebillNumber": {
              "type": "integer",
              "description": "Number of rebill cycle of the renewal"
            },
            "paymentDunningIndex": {
              "type": "integer",
              "description": "Dunning index of the related payment"
            },
            "isInitial": {
              "type": "boolean",
              "description": "Whether it is the first renewal of the subscription or not"
            },
            "refund": {
              "type": "object",
              "description": "Contains data for the related refund transaction if it exists",
              "readOnly": true,
              "properties": {
                "transactionId": {
                  "description": "Refund transaction ID",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResourceId"
                    }
                  ]
                },
                "transactionCreatedTime": {
                  "description": "Refund transaction creation time",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServerTimestamp"
                    }
                  ]
                }
              }
            },
            "chargeback": {
              "type": "object",
              "description": "Contains data for the related chargeback (dispute) if it exists",
              "readOnly": true,
              "properties": {
                "disputeId": {
                  "description": "Dispute ID",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResourceId"
                    }
                  ]
                },
                "disputeCreatedTime": {
                  "description": "Dispute creation time",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServerTimestamp"
                    }
                  ]
                }
              }
            },
            "lead": {
              "type": "object",
              "description": "Related lead source if it exists",
              "readOnly": true,
              "properties": {
                "medium": {
                  "type": "string",
                  "description": "Medium of the lead source"
                },
                "source": {
                  "type": "string",
                  "description": "Source of the lead source"
                },
                "campaign": {
                  "type": "string",
                  "description": "Campaign of the lead source"
                },
                "content": {
                  "type": "string",
                  "description": "Content of the lead source"
                },
                "term": {
                  "type": "string",
                  "description": "Term of the lead source"
                },
                "affiliate": {
                  "type": "string",
                  "description": "Affiliate of the lead source"
                },
                "subAffiliate": {
                  "type": "string",
                  "description": "SubAffiliate of the lead source"
                },
                "salesAgent": {
                  "type": "string",
                  "description": "SalesAgent of the lead source"
                },
                "createdTime": {
                  "description": "Lead source creation time",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServerTimestamp"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "SubscriptionSummaryMetrics": {
        "type": "object",
        "properties": {
          "currency": {
            "description": "Currency (three letter ISO 4217 alpha code) (eg USD, EUR)",
            "readOnly": true,
            "type": "string"
          },
          "invoicedAmount": {
            "description": "Sum of all issued, past due, or paid invoices",
            "readOnly": true,
            "type": "number",
            "format": "double"
          },
          "collectedAmount": {
            "description": "Sum of all paid invoices",
            "readOnly": true,
            "type": "number",
            "format": "double"
          },
          "invoiceCount": {
            "description": "Number of issued, past due, or paid invoices",
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "TimeSeriesTransaction": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Contains an aggregation",
              "readOnly": true,
              "properties": {
                "date": {
                  "type": "string",
                  "description": "Date in format YYYY-MM-DD"
                },
                "total": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount or count of all transactions within the aggregation"
                },
                "subaggregates": {
                  "type": "object",
                  "description": "Subaggregates which have appropriate transactions within the range",
                  "properties": {
                    "subaggregate": {
                      "type": "string",
                      "description": "Subaggregate identifier"
                    },
                    "value": {
                      "type": "number",
                      "format": "double",
                      "description": "Amount or count of the subaggregate's transactions within the aggregation"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TransactionsPlan": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "Contains transaction's data",
          "readOnly": true,
          "properties": {
            "transactionId": {
              "description": "Transaction's identifier",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResourceId"
                }
              ]
            },
            "websiteId": {
              "description": "Website's identifier",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResourceId"
                }
              ]
            },
            "customerId": {
              "description": "Customer's identifier",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResourceId"
                }
              ]
            },
            "customerEmail": {
              "type": "string",
              "description": "Customer's email"
            },
            "planId": {
              "description": "Plan's identifier",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResourceId"
                }
              ]
            },
            "subscriptionId": {
              "description": "Subscription's identifier",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResourceId"
                }
              ]
            },
            "currency": {
              "type": "string",
              "description": "Transaction's currency 3-letters code"
            },
            "amount": {
              "type": "number",
              "format": "double",
              "description": "Transaction's amount"
            },
            "rebillNumber": {
              "type": "integer",
              "description": "Transaction's rebill number"
            },
            "createdTime": {
              "description": "Transaction's created time",
              "allOf": [
                {
                  "$ref": "#/components/schemas/ServerTimestamp"
                }
              ]
            },
            "type": {
              "type": "string",
              "description": "Transaction's type",
              "enum": [
                "authorize",
                "capture",
                "credit",
                "refund",
                "sale",
                "void"
              ]
            },
            "result": {
              "type": "string",
              "description": "Transaction's result",
              "enum": [
                "approved",
                "connection-error",
                "declined",
                "never-sent",
                "pending",
                "pending-processor",
                "timeout",
                "unknown"
              ]
            },
            "gatewayTransactionId": {
              "type": "string",
              "description": "Gateway's own transaction identifier"
            },
            "paymentType": {
              "type": "string",
              "enum": [
                "payment_card",
                "ach",
                "paypal",
                "china_unionpay",
                "ochapay"
              ],
              "description": "Type of payment"
            }
          }
        }
      }
    },
    "responses": {
      "AccessForbidden": {
        "description": "Access forbidden, invalid API-KEY was used",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InvalidDataError": {
        "description": "Invalid data was sent",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/InvalidError"
            }
          }
        }
      },
      "NoContent": {
        "description": "Request was accepted, but no response body is returned"
      },
      "NotFound": {
        "description": "Resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "parameters": {
      "collectionEventTypes": {
        "name": "eventTypes",
        "in": "query",
        "description": "The event types",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "collectionExpand": {
        "name": "expand",
        "in": "query",
        "description": "Expand response to get full related object instead of ID. See the expand guide for more info.",
        "schema": {
          "type": "string"
        }
      },
      "collectionFields": {
        "name": "fields",
        "in": "query",
        "description": "Limit the returned fields to the list specified, separated by comma. Note that id is always returned.",
        "schema": {
          "type": "string"
        }
      },
      "collectionFilter": {
        "name": "filter",
        "in": "query",
        "description": "The collection items filter requires a special format.\nUse \",\" for multiple allowed values.  Use \";\" for multiple fields.\nSee the [filter guide](#section/Using-filter) for more options and examples about this format.\n",
        "schema": {
          "type": "string"
        }
      },
      "collectionLimit": {
        "name": "limit",
        "in": "query",
        "description": "The collection items limit",
        "schema": {
          "type": "integer",
          "minimum": 0,
          "maximum": 1000
        }
      },
      "collectionOffset": {
        "name": "offset",
        "in": "query",
        "description": "The collection items offset",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "collectionQuery": {
        "name": "q",
        "in": "query",
        "description": "The partial search of the text fields.",
        "schema": {
          "type": "string"
        }
      },
      "collectionSort": {
        "name": "sort",
        "in": "query",
        "description": "The collection items sort field and order (prefix with \"-\" for descending sort).",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "mediaType": {
        "name": "Accept",
        "in": "header",
        "description": "The response media type",
        "schema": {
          "type": "string",
          "enum": [
            "application/json",
            "text/csv",
            "application/pdf"
          ],
          "default": "application/json"
        }
      },
      "reportTimezone": {
        "name": "tz",
        "in": "query",
        "description": "Report's timezone offset in minutes",
        "schema": {
          "type": "integer",
          "minimum": -720,
          "maximum": 720
        }
      },
      "resourceId": {
        "name": "id",
        "in": "path",
        "description": "The resource identifier string",
        "required": true,
        "schema": {
          "type": "string",
          "maxLength": 50,
          "pattern": "^[@~\\-\\.\\w\\d]+$"
        }
      }
    },
    "headers": {
      "Pagination-Limit": {
        "description": "Items per page limit",
        "schema": {
          "type": "integer"
        }
      },
      "Pagination-Offset": {
        "description": "Pagination offset",
        "schema": {
          "type": "integer"
        }
      },
      "Pagination-Total": {
        "description": "Total items count",
        "schema": {
          "type": "integer"
        }
      },
      "Rate-Limit-Limit": {
        "description": "The number of allowed requests in the current period",
        "schema": {
          "type": "integer"
        }
      },
      "Rate-Limit-Remaining": {
        "description": "The number of remaining requests in the current period",
        "schema": {
          "type": "integer"
        }
      },
      "Rate-Limit-Reset": {
        "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "DataExport": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DataExport"
            }
          }
        },
        "description": "Data Export Request",
        "required": true
      },
      "PatchOrganization": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "name": {
                  "description": "The organization name.  It must be globally unique within Rebilly.",
                  "type": "string"
                },
                "address": {
                  "description": "The organization street address",
                  "type": "string",
                  "maxLength": 60
                },
                "address2": {
                  "description": "The organization street address",
                  "type": "string",
                  "maxLength": 60
                },
                "city": {
                  "description": "The organization city",
                  "type": "string",
                  "maxLength": 45
                },
                "region": {
                  "description": "The organization region (state)",
                  "type": "string",
                  "maxLength": 45
                },
                "country": {
                  "description": "The organization country ISO Alpha-2 code",
                  "type": "string",
                  "pattern": "^[A-Z]{2}$"
                },
                "postalCode": {
                  "description": "The organization postal code",
                  "type": "string",
                  "maxLength": 10
                },
                "phoneNumbers": {
                  "$ref": "#/components/schemas/ContactPhoneNumbers"
                },
                "emails": {
                  "$ref": "#/components/schemas/ContactEmails"
                },
                "taxDescriptor": {
                  "description": "The organization's tax label. This will be displayed on the invoice.",
                  "type": "string",
                  "maxLength": 255
                },
                "invoiceTimeZone": {
                  "description": "Invoice will use this time zone to display time otherwise UTC will be used. Example \"America/New_York\"",
                  "type": "string",
                  "maxLength": 50
                }
              }
            }
          }
        },
        "description": "Create Organization Request"
      },
      "PostOrganization": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "name",
                "website",
                "country",
                "reportCurrency"
              ],
              "properties": {
                "name": {
                  "description": "The organization name.  It must be globally unique within Rebilly.",
                  "type": "string"
                },
                "website": {
                  "description": "The organization website address",
                  "type": "string",
                  "format": "url"
                },
                "address": {
                  "description": "The organization street address",
                  "type": "string",
                  "maxLength": 60
                },
                "address2": {
                  "description": "The organization street address",
                  "type": "string",
                  "maxLength": 60
                },
                "city": {
                  "description": "The organization city",
                  "type": "string",
                  "maxLength": 45
                },
                "region": {
                  "description": "The organization region (state)",
                  "type": "string",
                  "maxLength": 45
                },
                "country": {
                  "description": "The organization country ISO Alpha-2 code",
                  "type": "string",
                  "pattern": "^[A-Z]{2}$"
                },
                "postalCode": {
                  "description": "The organization postal code",
                  "type": "string",
                  "maxLength": 10
                },
                "phoneNumbers": {
                  "$ref": "#/components/schemas/ContactPhoneNumbers"
                },
                "emails": {
                  "$ref": "#/components/schemas/ContactEmails"
                },
                "taxDescriptor": {
                  "description": "The organization's tax label. This will be displayed on the invoice.",
                  "type": "string",
                  "maxLength": 255
                },
                "invoiceTimeZone": {
                  "description": "Invoice will use this time zone to display time otherwise UTC will be used. Example \"America/New_York\"",
                  "type": "string",
                  "maxLength": 50
                },
                "reportCurrency": {
                  "description": "The currency used for reports. It can only be set upon organization creation.",
                  "type": "string",
                  "pattern": "^[A-Z]{3}$"
                }
              }
            }
          }
        },
        "description": "Create Organization Request"
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "description": "When you sign up for an account, you are given your first API key.\nTo do so please follow this link: https://www.rebilly.com/site/signup/\nAlso you can generate additional API keys, and delete API keys (as you may\nneed to rotate your keys in the future).\n",
        "name": "REB-APIKEY",
        "type": "apiKey",
        "in": "header"
      },
      "JWT": {
        "description": "You can create a JSON Web Token (JWT) via our [JWT Session resource](https://rebilly.github.io/RebillyUserAPI/#tag/JWT-Session/paths/~1signin/post).\nUsage format: `Bearer <JWT>`\n",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "RebAuth": {
        "description": "When you sign up for an account, you are given your first secret API key.\nTo do so please [follow this link.](https://app.rebilly.com/signup)\nAlso you can generate additional API keys, and delete API keys (as you may\nneed to rotate your keys in the future). All API keys can be restricted to a\nsmall set of permissions (restricted API keys).\n",
        "name": "REB-AUTH",
        "type": "apiKey",
        "in": "header"
      }
    }
  }
}
