{
  "swagger": "2.0",
  "info": {
    "version": "0.1",
    "title": "Rebilly Experimental Reports REST API",
    "contact": {
      "name": "Rebilly API Support",
      "url": "https://www.rebilly.com/contact/",
      "email": "integrations@rebilly.com"
    },
    "license": {
      "name": "Rebilly",
      "url": "https://my.rebilly.com/api/license/"
    },
    "termsOfService": "https://www.rebilly.com/terms/",
    "x-logo": {
      "url": "https://rebilly.github.io/RebillyAPI/rb_apiLogo.svg",
      "backgroundColor": "#0033A0"
    }
  },
  "host": "api.rebilly.com",
  "basePath": "/experimental",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Introduction",
      "description": "This API is experimental and likely to change.  We would appreciate\nfeedback.\n"
    },
    {
      "name": "Authentication",
      "description": "When you sign up for an account, you are given your first API key.\nYou can generate additional API keys, and delete API keys (as you may\nneed to rotate your keys in the future). You authenticate to the\nRebilly API by providing your secret key in the request header.\n\nRebilly offers three forms of authentication:  private key, JSON Web Tokens, and\npublic key.\n- private key: authenticates each request by searching for the presence\nof an HTTP header: REB-APIKEY.\n- JWT: authenticates each request by the HTTP header: Authorization.\n- public key: authenticates by the HTTP header: REB-AUTH (read more on this below).\n\nRebilly also offers JSON Web Tokens (JWT) authentication, where you can control\nthe specific granular permissions and expiration for that JWT.  We call our resource\nfor generating JWT [Sessions](#tag/Sessions).\n\nRebilly also has a client-side authentication scheme that uses an\napiUser and HMAC-SHA1 signature (only for the Tokens resource), so\nthat you may safely create tokens from the client-side without compromising\nyour secret keys.\n\nNever share your secret keys. Keep them guarded and secure.\nThe client-side authentication scheme uses one HTTP header named REB-AUTH.\n"
    },
    {
      "name": "Histograms",
      "description": "Histograms are for particular kinds of reports with cohorts and periods.\n"
    },
    {
      "name": "Reports",
      "description": "Retrieve summary information about your customers, subscriptions, transactions, and more.\n"
    },
    {
      "name": "Data Exports",
      "description": "Data exports.\n"
    }
  ],
  "securityDefinitions": {
    "ApiKey": {
      "description": "When you sign up for an account, you are given your first API key.\nTo do so please follow this link: https://www.rebilly.com/site/signup/\nAlso you can generate additional API keys, and delete API keys (as you may\nneed to rotate your keys in the future).\n",
      "name": "REB-APIKEY",
      "type": "apiKey",
      "in": "header"
    },
    "JWT": {
      "description": "You can create a JSON Web Token (JWT) via our Sessions resource.\n",
      "type": "basic"
    },
    "RebAuth": {
      "description": "Only for the Tokens resource.\nThe REB-AUTH value is created in this way\nGenerate a Nonce (random string), and a Timestamp (unix timestamp)\nConcatenate the values of ApiUser, Nonce, and Timestamp (in that order).\nUse that value as the input data when you calculate the <a href=\"http://tools.ietf.org/html/rfc2104\">HMAC-SHA1</a> with your secret key, called the signature.\nForming the four data points into a JSON object.  {\"REB-APIUSER\":\"abcdefg\",\"REB-NONCE\":\"adfsjtreitou345fgkdafgj\",\"REB-TIMESTAMP\":\"1382591345\",\"REB-SIGNATURE\":\"a234fc95460401cfg09c9d09\"}\nThen base64 encode that JSON object.  This is the final value of the REB-AUTH HTTP header\n",
      "name": "REB-AUTH",
      "type": "apiKey",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKey": []
    }
  ],
  "responses": {
    "AccessForbidden": {
      "description": "Access forbidden, invalid API-KEY was used",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "Resource was not found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "Conflict": {
      "description": "Conflict",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "InvalidDataError": {
      "description": "Invalid data was sent",
      "schema": {
        "$ref": "#/definitions/InvalidError"
      }
    },
    "NoContent": {
      "description": "Request was accepted, but no response body is returned"
    }
  },
  "parameters": {
    "resourceId": {
      "name": "id",
      "in": "path",
      "description": "The resource identifier string",
      "type": "string",
      "required": true
    },
    "collectionLimit": {
      "name": "limit",
      "in": "query",
      "description": "The collection items limit",
      "type": "integer",
      "minimum": 0,
      "maximum": 1000
    },
    "collectionOffset": {
      "name": "offset",
      "in": "query",
      "description": "The collection items offset",
      "type": "integer",
      "minimum": 0
    },
    "collectionFilter": {
      "name": "filter",
      "in": "query",
      "type": "string",
      "description": "The collection items filter requires a special format.\nUse \",\" for multiple allowed values.  Use \";\" for multiple fields.\nSee the filter guide for more options and examples about this format.\n"
    },
    "collectionQuery": {
      "name": "q",
      "in": "query",
      "type": "string",
      "description": "The partial search of the text fields."
    },
    "collectionCriteria": {
      "name": "criteria",
      "in": "query",
      "type": "string",
      "description": "The json criteria for collection"
    },
    "collectionSort": {
      "name": "sort",
      "in": "query",
      "type": "string",
      "description": "The collection items sort field and order (prefix with \"-\" for descending sort)."
    },
    "collectionFields": {
      "name": "fields",
      "in": "query",
      "type": "string",
      "description": "Limit the returned fields to the list specified, separated by comma.  Note that id is always returned."
    },
    "collectionExpand": {
      "name": "expand",
      "in": "query",
      "type": "string",
      "description": "Expand response to get full related object intead of ID.  See the expand guide for more info."
    },
    "mediaType": {
      "name": "Accept",
      "in": "header",
      "type": "string",
      "enum": [
        "application/json",
        "text/csv"
      ],
      "default": "application/json",
      "description": "The response media type"
    }
  },
  "paths": {
    "/customers/{customerId}/summary-metrics": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Retrieve customer lifetime summary metrics",
        "description": "Retrieve customer lifetime summary metrics\n",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Customer's ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Metrics were retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomerInformation"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/data-exports": {
      "post": {
        "tags": [
          "Data Exports"
        ],
        "summary": "Request a data export of selected resource",
        "description": "Request a data export of selected resource\n",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Data Export Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataExport"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Data export request received",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DataExport"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          },
          "422": {
            "description": "Invalid data was sent",
            "schema": {
              "$ref": "#/definitions/InvalidError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Data Exports"
        ],
        "summary": "Retrieve a list of data export requests",
        "description": "Retrieve a list of data export requests\n",
        "responses": {
          "200": {
            "description": "A list of data export requests was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataExport"
              }
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/data-exports/{id}": {
      "parameters": [
        {
          "$ref": "#/parameters/resourceId"
        }
      ],
      "get": {
        "tags": [
          "Data Exports"
        ],
        "summary": "Retrieve a data export request",
        "description": "Retrieve a data export request\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Data Export request",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/DataExport"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Data Exports"
        ],
        "summary": "Modify a data export",
        "description": "A data export may be changed as long as it is still pending\n",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Data Export Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataExport"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data Export was modified",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DataExport"
            }
          },
          "201": {
            "description": "Data Export was created",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DataExport"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          },
          "422": {
            "description": "Invalid data was sent",
            "schema": {
              "$ref": "#/definitions/InvalidError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Data Exports"
        ],
        "summary": "Delete a data export",
        "description": "Delete an existing data export\n",
        "responses": {
          "204": {
            "$ref": "#/responses/NoContent"
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/histograms/transactions": {
      "get": {
        "tags": [
          "Histograms"
        ],
        "summary": "Get Transaction histogram report data",
        "description": "Get Transaction histogram report data.\n",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start day",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end day",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report aggregation field",
            "required": true,
            "type": "string",
            "enum": [
              "website",
              "currency",
              "bin",
              "rebillNumber",
              "transactionResult",
              "transactionType",
              "gatewayAccount",
              "leadsAffiliate",
              "leadsCampaign",
              "leadsContent",
              "leadsMedium",
              "leadsSalesAgent",
              "leadsSource",
              "leadsSubAffiliate",
              "leadsTerm"
            ]
          },
          {
            "name": "aggregationPeriod",
            "in": "query",
            "description": "Report aggregation period",
            "required": true,
            "type": "string",
            "enum": [
              "hour",
              "day",
              "month"
            ]
          },
          {
            "name": "metric",
            "in": "query",
            "description": "Report metric",
            "required": true,
            "type": "string",
            "enum": [
              "ApprovalThroughput",
              "AuthApprovalThroughput",
              "AvgSalesPrice",
              "Refunds",
              "RefundCount",
              "Sales",
              "SalesCount"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction report was retrieved successfully.",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/HistogramData"
            }
          }
        }
      }
    },
    "/report/payments-success-by-decline-reason": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a report of payments successful retries throughput",
        "description": "Retrieve a report of payments successful retries throughput",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start day",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end day",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          },
          {
            "$ref": "#/parameters/collectionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/ReportPaymentsSuccessfulRetries"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/api-log-summary": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a API Log Summary Report",
        "description": "Retrieve a API Log Summary Report",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/APILogSummary"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/cumulative-subscriptions-plans": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a cumulative subscriptions plans report",
        "description": "Retrieve a cumulative subscriptions report aggregated by day and plans",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          },
          {
            "$ref": "#/parameters/collectionFilter"
          },
          {
            "$ref": "#/parameters/collectionCriteria"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "enum": [
              "application/json",
              "text/csv"
            ],
            "default": "application/json",
            "description": "The response media type"
          }
        ],
        "produces": [
          "application/json",
          "text/csv"
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/CumulativeSubscriptionsPlans"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/cumulative-subscriptions": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a cumulative subscriptions report",
        "description": "Retrieve a cumulative subscriptions report",
        "parameters": [
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report aggregation field",
            "required": true,
            "type": "string",
            "enum": [
              "day",
              "month"
            ]
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          },
          {
            "$ref": "#/parameters/collectionFilter"
          },
          {
            "$ref": "#/parameters/collectionCriteria"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CumulativeSubscriptions"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/dcc-markup": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a DCC markup report",
        "description": "Retrieve a DCC markup report",
        "parameters": [
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report aggregation field",
            "required": true,
            "type": "string",
            "enum": [
              "day",
              "month",
              "bin",
              "country",
              "baseCurrency",
              "quoteCurrency"
            ]
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          },
          {
            "$ref": "#/parameters/collectionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/DccMarkup"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/disputes": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a disputes report",
        "description": "Retrieve a disputes report\n",
        "parameters": [
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report will be aggregated by this field",
            "required": true,
            "type": "string",
            "enum": [
              "website",
              "processor",
              "currency",
              "bin",
              "country",
              "rebillNumber",
              "retryNumber",
              "gatewayAccount",
              "transactionAmount"
            ]
          },
          {
            "name": "periodMonth",
            "in": "query",
            "description": "Report month in format YYYY-MM",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          },
          {
            "$ref": "#/parameters/collectionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/ReportDisputes"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/events-triggered": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a events triggered summary report",
        "description": "Retrieve a events triggered summary report.\n",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/ReportEventsTriggeredSummary"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/events-triggered/{eventType}/rules": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a rules matched summary report",
        "description": "Retrieve a rules matched summary report by events triggered.\n",
        "parameters": [
          {
            "name": "eventType",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The system event type",
            "enum": [
              "dispute-created",
              "gateway-account-requested",
              "transaction-processed",
              "subscription-canceled",
              "subscription-renewed",
              "payment-card-expired",
              "payment-declined",
              "transaction-process-requested",
              "risk-score-changed"
            ]
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/ReportRulesMatchedSummary"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/future-renewals": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a future renewals report",
        "description": "Retrieve a future renewals report",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date. It should be in the future",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/FutureRenewals"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/renewal-sales": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a renewal sales report",
        "description": "Retrieve a renewal sales report\n",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/RenewalSales"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/retention-percentage": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a retention percentage report",
        "description": "Retrieve a retention percentage report\n",
        "parameters": [
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report aggregation field",
            "required": true,
            "type": "string",
            "enum": [
              "day",
              "month",
              "quarter",
              "year"
            ]
          },
          {
            "name": "aggregationPeriod",
            "in": "query",
            "description": "Report aggregation period",
            "required": true,
            "type": "string",
            "enum": [
              "day",
              "month",
              "quarter",
              "year",
              "cycle"
            ]
          },
          {
            "name": "includeSwitchedSubscriptions",
            "in": "query",
            "description": "If to include switched subscriptions",
            "type": "string",
            "enum": [
              true,
              false
            ]
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          },
          {
            "$ref": "#/parameters/collectionFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/ReportRetentionPercentage"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/retention-value": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a retention value report",
        "description": "The retention value report shows the count of new customers\nper aggregation bucket and the corresponding per customer value over time.\n",
        "parameters": [
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report aggregation field",
            "required": true,
            "type": "string",
            "enum": [
              "day",
              "month",
              "quarter",
              "year",
              "leadsSource",
              "leadsMedium",
              "leadsCampaign",
              "leadsContent",
              "leadsTerm",
              "leadsAffiliate",
              "leadsSubAffiliate",
              "leadsSalesAgent"
            ]
          },
          {
            "name": "aggregationPeriod",
            "in": "query",
            "description": "Report aggregation period",
            "required": true,
            "type": "string",
            "enum": [
              "day",
              "month",
              "quarter",
              "year"
            ]
          },
          {
            "name": "includeRefunds",
            "in": "query",
            "description": "If to include refunds",
            "type": "string",
            "enum": [
              true,
              false
            ]
          },
          {
            "name": "includeDisputes",
            "in": "query",
            "description": "If to include disputes",
            "type": "string",
            "enum": [
              true,
              false
            ]
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          },
          {
            "$ref": "#/parameters/collectionFilter"
          },
          {
            "$ref": "#/parameters/collectionCriteria"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/ReportRetentionValue"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/retry-transaction": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a payment retry report",
        "description": "Retrieve a payment retry report\n",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "$ref": "#/parameters/collectionFilter"
          },
          {
            "$ref": "#/parameters/collectionCriteria"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ReportPaymentRetry"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/statistics": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a statistics report",
        "description": "Retrieve a statistics report\n",
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ReportStatistics"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/subscription-cancellation": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve transactions with their plan data",
        "description": "Retrieve transactions with their plan data",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report aggregation field",
            "required": true,
            "type": "string",
            "enum": [
              "planId",
              "websiteId",
              "canceledBy",
              "cancelCategory",
              "leadSource.source",
              "leadSource.medium",
              "leadSource.campaign",
              "leadSource.content",
              "leadSource.term",
              "leadSource.affiliate",
              "leadSource.subAffiliate",
              "leadSource.salesAgent"
            ]
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          },
          {
            "$ref": "#/parameters/collectionFilter"
          },
          {
            "$ref": "#/parameters/collectionCriteria"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "enum": [
              "application/json"
            ],
            "default": "application/json",
            "description": "The response media type"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/SubscriptionCancellation"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/subscription-renewal-list": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a list of subscription renewals data",
        "description": "Retrieve a list of subscription renewals data",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "enum": [
              "application/json",
              "text/csv"
            ],
            "default": "application/json",
            "description": "The response media type"
          }
        ],
        "produces": [
          "application/json",
          "text/csv"
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/SubscriptionRenewalList"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/subscription-renewal": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a subscription renewal report",
        "description": "Retrieve a subscription renewal report",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/SubscriptionRenewal"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/time-series-transaction": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a time series transactions report",
        "description": "Retrieve a transactions report aggregated by time periods",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Report aggregation type",
            "required": true,
            "type": "string",
            "enum": [
              "count",
              "amount",
              "approval-rate",
              "incomplete-rate"
            ]
          },
          {
            "name": "subaggregate",
            "in": "query",
            "description": "Report subaggregate",
            "required": true,
            "type": "string",
            "enum": [
              "website",
              "gateway-account",
              "currency",
              "leads.source",
              "leads.medium",
              "leads.campaign",
              "leads.content",
              "leads.term",
              "leads.affiliate",
              "leads.subaffiliate",
              "leads.sales-agent"
            ]
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/TimeSeriesTransaction"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/transactions-plan": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve transactions with their plan data",
        "description": "Retrieve transactions with their plan data",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "enum": [
              "application/json",
              "text/csv"
            ],
            "default": "application/json",
            "description": "The response media type"
          }
        ],
        "produces": [
          "application/json",
          "text/csv"
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/TransactionsPlan"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/transactions-time-dispute": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a dispute delays in days report",
        "description": "Retrieve a dispute delays in days report, how much time between a transaction and a dispute.\n",
        "parameters": [
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report will be aggregated by this field",
            "required": true,
            "type": "string",
            "enum": [
              "website",
              "processor",
              "currency",
              "bin",
              "country",
              "rebillNumber",
              "retryNumber",
              "gatewayAccount",
              "transactionAmount"
            ]
          },
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start date",
            "type": "string",
            "required": true
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end date",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          },
          {
            "$ref": "#/parameters/collectionFilter"
          },
          {
            "$ref": "#/parameters/collectionCriteria"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/ReportDisputeDelays"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/reports/transactions": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a transactions report",
        "description": "Retrieve a transactions report",
        "parameters": [
          {
            "name": "periodStart",
            "in": "query",
            "description": "Report start day",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "periodEnd",
            "in": "query",
            "description": "Report end day",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "aggregationField",
            "in": "query",
            "description": "Report aggregation field",
            "required": true,
            "type": "string",
            "enum": [
              "website",
              "currency",
              "bin",
              "rebillNumber",
              "transactionResult",
              "transactionType",
              "gatewayAccount",
              "leadsAffiliate",
              "leadsCampaign",
              "leadsContent",
              "leadsMedium",
              "leadsSalesAgent",
              "leadsSource",
              "leadsSubAffiliate",
              "leadsTerm"
            ]
          },
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionOffset"
          },
          {
            "$ref": "#/parameters/collectionFilter"
          },
          {
            "$ref": "#/parameters/collectionCriteria"
          }
        ],
        "responses": {
          "200": {
            "description": "Report was retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              },
              "Pagination-Total": {
                "description": "Total items count",
                "type": "integer"
              },
              "Pagination-Limit": {
                "description": "Items per page limit",
                "type": "integer"
              },
              "Pagination-Offset": {
                "description": "Pagination offset",
                "type": "integer"
              }
            },
            "schema": {
              "$ref": "#/definitions/ReportTransactions"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/summary-metrics": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Retrieve subscription summary metrics",
        "description": "Retrieve subscription summary metrics\n",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Subscription's ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Metrics were retrieved successfully",
            "headers": {
              "Rate-Limit-Limit": {
                "description": "The number of allowed requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Remaining": {
                "description": "The number of remaining requests in the current period",
                "type": "integer"
              },
              "Rate-Limit-Reset": {
                "description": "The date in format defined by [RFC 822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\nwhen the current period will reset\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SubscriptionSummaryMetrics"
            }
          },
          "401": {
            "$ref": "#/responses/AccessForbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "APILogSummary": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "The number of requests per each method.",
            "readOnly": true,
            "properties": {
              "route": {
                "type": "string",
                "description": "Route string pattern"
              },
              "total": {
                "type": "integer",
                "description": "Total count of requests"
              },
              "get": {
                "type": "integer",
                "description": "Count of GET requests."
              },
              "post": {
                "type": "integer",
                "description": "Count of POST requests."
              },
              "put": {
                "type": "integer",
                "description": "Count of PUT requests."
              },
              "patch": {
                "type": "integer",
                "description": "Count of PATCH requests."
              },
              "delete": {
                "type": "integer",
                "description": "Count of DELETE requests."
              },
              "head": {
                "type": "integer",
                "description": "Count of HEAD requests."
              },
              "options": {
                "type": "integer",
                "description": "Count of OPTIONS requests."
              }
            }
          }
        }
      }
    },
    "Condition": {
      "type": "object",
      "discriminator": "op",
      "properties": {
        "op": {
          "type": "string",
          "description": "The condition operation",
          "enum": [
            "and",
            "or",
            "not",
            "between",
            "equals",
            "in",
            "gt",
            "gte",
            "lt",
            "lte"
          ]
        }
      },
      "required": [
        "op"
      ]
    },
    "and": {
      "type": "object",
      "description": "Logical AND",
      "allOf": [
        {
          "$ref": "#/definitions/Condition"
        },
        {
          "$ref": "#/definitions/logical"
        }
      ]
    },
    "between": {
      "type": "object",
      "description": "Between condition",
      "allOf": [
        {
          "$ref": "#/definitions/Condition"
        },
        {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "min": {
              "type": "string"
            },
            "max": {
              "type": "string"
            }
          },
          "required": [
            "path",
            "min",
            "max"
          ]
        }
      ]
    },
    "compare": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "path",
        "value"
      ]
    },
    "equals": {
      "type": "object",
      "description": "Equals condition",
      "allOf": [
        {
          "$ref": "#/definitions/Condition"
        },
        {
          "$ref": "#/definitions/compare"
        }
      ]
    },
    "gt": {
      "type": "object",
      "description": "Greater than condition",
      "allOf": [
        {
          "$ref": "#/definitions/Condition"
        },
        {
          "$ref": "#/definitions/compare"
        }
      ]
    },
    "gte": {
      "type": "object",
      "description": "Greater than or equals condition",
      "allOf": [
        {
          "$ref": "#/definitions/Condition"
        },
        {
          "$ref": "#/definitions/compare"
        }
      ]
    },
    "in": {
      "type": "object",
      "description": "In condition",
      "allOf": [
        {
          "$ref": "#/definitions/Condition"
        },
        {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "path",
            "values"
          ]
        }
      ]
    },
    "logical-not": {
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/Condition"
        }
      },
      "required": [
        "condition"
      ],
      "example": {
        "operation": "not",
        "condition": {
          "operation": "equals",
          "path": "/name",
          "value": "John Dou"
        }
      }
    },
    "logical": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "minItems": 2,
          "items": {
            "$ref": "#/definitions/Condition"
          }
        }
      },
      "required": [
        "conditions"
      ]
    },
    "lt": {
      "type": "object",
      "description": "Less than condition",
      "allOf": [
        {
          "$ref": "#/definitions/Condition"
        },
        {
          "$ref": "#/definitions/compare"
        }
      ]
    },
    "lte": {
      "type": "object",
      "description": "Less than or equals condition",
      "allOf": [
        {
          "$ref": "#/definitions/Condition"
        },
        {
          "$ref": "#/definitions/compare"
        }
      ]
    },
    "not": {
      "type": "object",
      "description": "Logical NOT",
      "allOf": [
        {
          "$ref": "#/definitions/Condition"
        },
        {
          "$ref": "#/definitions/logical-not"
        }
      ]
    },
    "or": {
      "type": "object",
      "description": "Logical OR",
      "allOf": [
        {
          "$ref": "#/definitions/Condition"
        },
        {
          "$ref": "#/definitions/logical"
        }
      ]
    },
    "CumulativeSubscriptions": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Contains an aggregation",
            "readOnly": true,
            "properties": {
              "aggregationValue": {
                "type": "string",
                "description": "Date in format YYYY-MM (monthly aggregation) or YYYY-MM-DD (daily aggregation)"
              },
              "newCount": {
                "type": "integer",
                "description": "Number of new subscriptions within the aggregation"
              },
              "canceledCount": {
                "type": "integer",
                "description": "Number of canceled subscriptions within the aggregation"
              },
              "cumulativeCount": {
                "type": "integer",
                "description": "Number of cumulative subscriptions from the previous aggregation +\nnumber of new subscriptions - number of canceled subscriptions within the aggregation.\n"
              }
            }
          }
        }
      }
    },
    "CumulativeSubscriptionsPlans": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Contains an aggregation",
        "readOnly": true,
        "properties": {
          "day": {
            "type": "string",
            "description": "Date in format YYYY-MM-DD"
          },
          "month": {
            "type": "integer",
            "description": "Date in format YYYY-MM"
          },
          "planId": {
            "type": "integer",
            "description": "Plan id for which the aggregation is given"
          },
          "newCount": {
            "type": "integer",
            "description": "Number of new subscriptions within the aggregation"
          },
          "canceledCount": {
            "type": "integer",
            "description": "Number of canceled subscriptions within the aggregation"
          },
          "netCount": {
            "type": "integer",
            "description": "newCount - canceledCount"
          },
          "cumulativeCount": {
            "type": "integer",
            "description": "Number of cumulative subscriptions from the previous aggregation +\nnumber of new subscriptions - number of canceled subscriptions within the aggregation.\n"
          }
        }
      }
    },
    "CustomerInformation": {
      "type": "object",
      "properties": {
        "currency": {
          "description": "Currency (three letter ISO 4217 alpha code) (eg USD, EUR)",
          "readOnly": true,
          "type": "string"
        },
        "refundsAmount": {
          "description": "Sum of all refunded transactions",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "revenueAmount": {
          "description": "Sum of overall sales and captures that were approved",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "disputesAmount": {
          "description": "Sum of all disputed transactions",
          "readOnly": true,
          "type": "number",
          "format": "double"
        }
      }
    },
    "DataExport": {
      "type": "object",
      "required": [
        "dataExportInstruction"
      ],
      "properties": {
        "id": {
          "description": "The export identifier string",
          "readOnly": true,
          "allOf": [
            {
              "$ref": "#/definitions/ResourceId"
            }
          ]
        },
        "dataExportInstruction": {
          "allOf": [
            {
              "$ref": "#/definitions/DataExportInstruction"
            }
          ]
        },
        "userId": {
          "description": "The ID of the User who requested the data export",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "Status of export request",
          "readOnly": true,
          "type": "string",
          "enum": [
            "pending",
            "processing",
            "completed"
          ]
        },
        "recordCount": {
          "description": "The number of records in the export (excluding the header row)",
          "readOnly": true,
          "type": "integer"
        },
        "createdTime": {
          "description": "The time the data export was requested",
          "allOf": [
            {
              "$ref": "#/definitions/ServerTimestamp"
            }
          ]
        },
        "updatedTime": {
          "description": "Data export updated time",
          "allOf": [
            {
              "$ref": "#/definitions/ServerTimestamp"
            }
          ]
        },
        "_links": {
          "type": "array",
          "description": "The links related to resource",
          "readOnly": true,
          "minItems": 1,
          "maxItems": 4,
          "items": [
            {
              "$ref": "#/definitions/SelfLink"
            },
            {
              "$ref": "#/definitions/UserLink"
            },
            {
              "$ref": "#/definitions/FileDownloadLink"
            },
            {
              "$ref": "#/definitions/SignedLinkLink"
            }
          ]
        }
      }
    },
    "DataExportInstruction": {
      "type": "object",
      "description": "Defines the parameters of the requested data export",
      "required": [
        "name",
        "format",
        "resource"
      ],
      "properties": {
        "name": {
          "description": "Export name",
          "type": "string"
        },
        "resource": {
          "description": "The type of resource being exported (eg., transactions).",
          "type": "string",
          "enum": [
            "transactions"
          ]
        },
        "format": {
          "description": "Export result format",
          "type": "string",
          "enum": [
            "csv"
          ]
        },
        "arguments": {
          "description": "Export request arguments that can be passed to filter and/or sort the result set",
          "type": "object",
          "properties": {
            "filter": {
              "description": "The collection items filter requires a special format. Use \",\" for multiple allowed values. Use \";\" for multiple fields. See the filter guide for more options and examples about this format.",
              "type": "string"
            },
            "sort": {
              "type": "array",
              "description": "The collection items sort field and order (prefix with \"-\" for descending sort).",
              "items": {
                "type": "string"
              }
            },
            "q": {
              "type": "string",
              "description": "The partial search of the text fields."
            },
            "criteria": {
              "$ref": "#/definitions/Condition"
            }
          }
        },
        "dateRange": {
          "$ref": "#/definitions/DateRange"
        },
        "emailNotification": {
          "description": "List of emails to be notified when export is completed",
          "type": "array",
          "items": {
            "type": "string",
            "format": "email"
          }
        }
      }
    },
    "DateRange": {
      "type": "object",
      "description": "The date range",
      "properties": {
        "start": {
          "type": "string",
          "description": "Any valid datetime arguments including [relative datetime arguments](http://php.net/manual/en/datetime.formats.php).",
          "example": "yesterday"
        },
        "end": {
          "type": "string",
          "description": "Any valid datetime arguments including [relative datetime arguments](http://php.net/manual/en/datetime.formats.php).",
          "example": "today"
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "DccMarkup": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Contains an aggregation",
            "readOnly": true,
            "properties": {
              "aggregationValue": {
                "type": "string",
                "description": "Value by which the report provides aggregated data.\nThe date values are displayed as following: Day: YYYY-MM-DD; Month: YYYY-MM.\n"
              },
              "selectedCount": {
                "type": "integer",
                "description": "Number of selected offers in the aggregation"
              },
              "selectedSum": {
                "type": "number",
                "format": "double",
                "description": "Amount of selected offers in the aggregation"
              },
              "rejectedCount": {
                "type": "integer",
                "description": "Number of rejected offers in the aggregation"
              },
              "rejectedSum": {
                "type": "number",
                "format": "double",
                "description": "Amount of rejected offers in the aggregation"
              },
              "unknownCount": {
                "type": "integer",
                "description": "Number of offers in the aggregation which weren't selected nor rejected"
              },
              "unknownSum": {
                "type": "number",
                "format": "double",
                "description": "Amount of offers in the aggregation which weren't selected nor rejected"
              }
            }
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "minimum": 100,
          "maximum": 600
        },
        "error": {
          "type": "string"
        }
      }
    },
    "FutureRenewals": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Contains an aggregation",
            "readOnly": true,
            "properties": {
              "date": {
                "type": "string",
                "description": "Date in format YYYY-MM"
              },
              "sum": {
                "type": "number",
                "format": "double",
                "description": "Amount of future renewals in user's reporting currency"
              },
              "plansCount": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Plan within the aggregation",
                  "readOnly": true,
                  "properties": {
                    "planId": {
                      "description": "Plan identifier",
                      "allOf": [
                        {
                          "$ref": "#/definitions/ResourceId"
                        }
                      ]
                    },
                    "count": {
                      "type": "integer",
                      "description": "Amount of plan's future renewals"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "HistogramData": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Contains date-time and value",
            "readOnly": true,
            "properties": {
              "date": {
                "type": "string",
                "description": "Entry date-time"
              },
              "value": {
                "type": "number",
                "description": "Entry value"
              }
            }
          }
        }
      }
    },
    "InvalidError": {
      "allOf": [
        {
          "$ref": "#/definitions/Error"
        },
        {
          "type": "object",
          "properties": {
            "details": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "ApprovalUrlLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "approval_url"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "BankAccountLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "bankAccount"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "BillingContactLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "billingContact"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "ContactLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "contact"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "CustomerLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "customer"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "DefaultPaymentInstrumentLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "defaultPaymentInstrument"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "DeliveryContactLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "deliveryContact"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "FileDownloadLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "download"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "ItemsLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "items"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "NewLink": {
      "type": "object",
      "properties": {
        "href": {
          "description": "The link URL",
          "type": "string"
        }
      },
      "required": [
        "href"
      ]
    },
    "NotesLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "notes"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "OnBoardingUrlLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "onBoardingUrl"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "PaymentCardLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "paymentCard"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "PaymentLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "payment"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "PlanLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "plan"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "ProcessorAccountLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "processorAccount"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "SelfLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "self"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "SignedLinkLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "signedLink"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "SubscriptionLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "subscription"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "TransactionLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "transaction"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "UserLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "user"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "WebsiteLink": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLink"
        }
      ],
      "properties": {
        "rel": {
          "description": "The link type",
          "type": "string",
          "enum": [
            "website"
          ]
        }
      },
      "required": [
        "rel"
      ]
    },
    "RenewalSales": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Contains an aggregation",
            "readOnly": true,
            "properties": {
              "aggregationValue": {
                "type": "string",
                "description": "Date in format YYYY-MM"
              },
              "newSales": {
                "type": "number",
                "format": "double",
                "description": "Amount of new sales"
              },
              "newRefunds": {
                "type": "number",
                "format": "double",
                "description": "Amount of new refunds"
              },
              "renewalSales": {
                "type": "number",
                "format": "double",
                "description": "Amount of renewal sales"
              },
              "renewalRefunds": {
                "type": "number",
                "format": "double",
                "description": "Amount of renewal refunds"
              }
            }
          }
        }
      }
    },
    "ReportDisputeDelays": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "aggregationFieldValue": {
                "description": "Selected aggregation field value (defined by query). It can be, for example, website or country.\nYou define it in aggregationField param in query.\n",
                "type": "string"
              },
              "25th": {
                "description": "25th percentile",
                "type": "integer"
              },
              "50th": {
                "description": "50th percentile",
                "type": "integer"
              },
              "75th": {
                "description": "75th percentile",
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "ReportDisputes": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "aggregationValue": {
                "description": "Selected aggregation field value (defined by query). It can be, for example, website or country.\nYou define it in aggregationField param in query.\n",
                "type": "string"
              },
              "countVisa": {
                "description": "Disputes count on Visa",
                "type": "integer"
              },
              "ratioCountVisa": {
                "description": "Disputes count / Settled transactions count",
                "type": "number",
                "format": "double"
              },
              "ratioAmountVisa": {
                "description": "Disputes amount / Settled transactions amount",
                "type": "number",
                "format": "double"
              },
              "countMastercard": {
                "description": "Disputes count on Mastercard",
                "type": "integer"
              },
              "ratioCountMastercard": {
                "description": "Disputes count / Settled transactions count",
                "type": "number",
                "format": "double"
              },
              "ratioAmountMastercard": {
                "description": "Disputes amount / Settled transactions amount",
                "type": "number",
                "format": "double"
              }
            }
          }
        }
      }
    },
    "ReportEventsTriggeredSummary": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "eventName": {
                "description": "System event name.\n",
                "type": "string",
                "enum": [
                  "dispute-created",
                  "gateway-account-requested",
                  "transaction-processed",
                  "subscription-canceled",
                  "subscription-renewed",
                  "payment-card-expired",
                  "payment-declined",
                  "transaction-process-requested",
                  "risk-score-changed"
                ]
              },
              "count": {
                "description": "Count of event triggered",
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "ReportPaymentRetry": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "retryNumber": {
                "description": "Retry attempts number",
                "type": "integer"
              },
              "attempts": {
                "description": "Attepmts count",
                "type": "integer"
              },
              "successfulTransactions": {
                "description": "Successful transactons count",
                "type": "integer"
              },
              "successRate": {
                "description": "Successful transactions ratio",
                "type": "number",
                "format": "double"
              }
            }
          }
        }
      }
    },
    "ReportPaymentsSuccessfulRetries": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Contains a report of payments successful retries throughput",
            "readOnly": true,
            "properties": {
              "declineCode": {
                "type": "string",
                "description": "Decline reason code"
              },
              "declineMessage": {
                "type": "string",
                "description": "Decline reason message"
              },
              "successfulRatio": {
                "type": "number",
                "format": "double",
                "description": "Successful ratio"
              }
            }
          }
        }
      }
    },
    "ReportRetentionPercentage": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Contains an aggregation",
            "readOnly": true,
            "properties": {
              "aggregationValue": {
                "type": "string",
                "description": "Value by which the report provides retention periods and percentages.\nThe date values are displayed as following:\nDay: YYYY-MM-DD;\nMonth: YYYY-MM;\nQuarter: YYYY-MM/YYYY-MM;\nYear: YYYY.\n"
              },
              "subscriptionsCount": {
                "type": "integer",
                "description": "Number of subscriptions created within the aggregation"
              },
              "periods": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "The period for the given aggregation",
                  "properties": {
                    "period": {
                      "type": "integer",
                      "description": "Retention period (0 - first, 1 - second etc) since the beginning boundary of the aggregation\n"
                    },
                    "retentionRatio": {
                      "type": "number",
                      "format": "double",
                      "description": "Ratio % of remaining subcriptions (not canceled) at the moment of retention period\nto all subscriptions created in the aggregation period\n"
                    },
                    "canceledSubscriptionsCount": {
                      "type": "integer",
                      "description": "Number of canceled subscriptions within the given retention period"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ReportRetentionValue": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Contains an aggregation",
            "readOnly": true,
            "properties": {
              "aggregationValue": {
                "type": "string",
                "description": "Value by which the report provides retention periods and values. The date values are displayed as following:\nDay: YYYY-MM-DD;\nMonth: YYYY-MM;\nQuarter: YYYY-MM/YYYY-MM;\nYear: YYYY.\n"
              },
              "customersCount": {
                "type": "integer",
                "description": "Number of customers within the aggregation with their first payment"
              },
              "periods": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "The period for the given aggregation",
                  "properties": {
                    "period": {
                      "type": "integer",
                      "description": "Retention period (0 - first, 1 - second etc) since the beginning boundary of the aggregation\n"
                    },
                    "retentionAverage": {
                      "type": "number",
                      "format": "double",
                      "description": "Summary amount of all transactions for all periods up to the current one\ndivided by the aggregation customers number\n"
                    },
                    "transactionsCount": {
                      "type": "integer",
                      "description": "The number of transactions happened in the retention period (e.g. in 3 rebills)"
                    },
                    "transactionsValue": {
                      "type": "number",
                      "format": "double",
                      "description": "The amount of transactions (income transactions - loss transactions)"
                    }
                  }
                }
              },
              "forecastPeriods": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "The period for the given future aggregation",
                  "properties": {
                    "period": {
                      "type": "integer",
                      "description": "Future retention period (0 - first, 1 - second etc) since the beginning boundary of the aggregation\n"
                    },
                    "retentionAverage": {
                      "type": "number",
                      "format": "double",
                      "description": "Predicted summary amount of all transactions for all periods up to the current one\ndivided by the predicted aggregation customers number\n"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ReportRulesMatchedSummary": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "rule": {
                "description": "Rule matched name.\n",
                "type": "string"
              },
              "count": {
                "description": "Count of matched rule.",
                "type": "integer"
              },
              "approvalRate": {
                "description": "Transaction approval rate by rule.",
                "type": "number",
                "format": "double"
              }
            }
          }
        }
      }
    },
    "ReportStatistics": {
      "type": "object",
      "properties": {
        "revenue": {
          "description": "Revenue in last 24 hours",
          "type": "number",
          "format": "double"
        },
        "revenueGrowthPercentage": {
          "description": "Revenue growth (in percents) in last 24 hours (against previous 24 hours)",
          "type": "number",
          "format": "double"
        },
        "customers": {
          "description": "New customers count in last 24 hours",
          "type": "integer"
        },
        "customersGrowthPercentage": {
          "description": "Customers count growth (in percents) in last 24 hours (against previous 24 hours)",
          "type": "number",
          "format": "double"
        },
        "cancels": {
          "description": "Cancels count in last 24 hours",
          "type": "integer"
        },
        "cancelsGrowthPercentage": {
          "description": "Cancels count growth (in percents) in last 24 hours (against previous 24 hours)",
          "type": "number",
          "format": "double"
        },
        "refunds": {
          "description": "Refunds count",
          "type": "integer"
        },
        "refundsGrowthPercentage": {
          "description": "Refunds count growth (in percents) in last 24 hours (against previous 24 hours)",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ReportTransactions": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "aggregationFieldValue": {
                "description": "Selected aggregation field value",
                "type": "string"
              },
              "authApprovedThroughput": {
                "description": "Approved auth transactions to all transactions percentage",
                "type": "integer"
              },
              "approvedThroughput": {
                "description": "Approved sale transactions to all transactions percentage",
                "type": "integer"
              },
              "salesCount": {
                "description": "Sales count",
                "type": "integer"
              },
              "salesValue": {
                "description": "Sales value",
                "type": "number",
                "format": "double"
              },
              "salesAverage": {
                "description": "Sales average value",
                "type": "number",
                "format": "double"
              },
              "refundsCount": {
                "description": "Refunds count",
                "type": "integer"
              },
              "refundsValue": {
                "description": "Refunds value",
                "type": "number",
                "format": "double"
              },
              "amount": {
                "description": "Amount",
                "type": "number",
                "format": "double"
              },
              "count": {
                "description": "Transactions count",
                "type": "number",
                "format": "double"
              }
            }
          }
        }
      }
    },
    "ResourceId": {
      "type": "string",
      "description": "The resource ID. Defaults to UUID v4",
      "maxLength": 50,
      "example": "4f6cf35x-2c4y-483z-a0a9-158621f77a21"
    },
    "TimeUnit": {
      "type": "string",
      "enum": [
        "second",
        "seconds",
        "minute",
        "minutes",
        "hour",
        "hours",
        "day",
        "days",
        "month",
        "months",
        "year",
        "years"
      ]
    },
    "ServerTimestamp": {
      "type": "string",
      "description": "Read-only timestamp, automatically assigned on back-end.",
      "format": "date-time",
      "readOnly": true
    },
    "SubscriptionCancellation": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Contains an aggregation",
            "readOnly": true,
            "properties": {
              "aggregationValue": {
                "type": "string",
                "description": "Aggregation value"
              },
              "count": {
                "type": "integer",
                "description": "Count of canceled subscriptions"
              },
              "averageLength": {
                "type": "number",
                "format": "double",
                "description": "Average length of canceled subscription from start to end within the aggregation in seconds"
              },
              "medianLength": {
                "type": "number",
                "format": "double",
                "description": "Median length of canceled subscription from start to end within the aggregation in seconds"
              }
            }
          }
        }
      }
    },
    "SubscriptionRenewal": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Contains an aggregation",
            "readOnly": true,
            "properties": {
              "planId": {
                "description": "Plan identifier for which subscriptions are counted",
                "allOf": [
                  {
                    "$ref": "#/definitions/ResourceId"
                  }
                ]
              },
              "allRenewalCount": {
                "type": "integer",
                "description": "All renewed subscriptions number"
              },
              "allDunningCount": {
                "type": "integer",
                "description": "All dunned subscriptions number"
              },
              "abandonedCount": {
                "type": "integer",
                "description": "Abandon subscriptions number"
              },
              "paidRenewalCount": {
                "type": "integer",
                "description": "Number of paid renewed subscriptions. Divide by allRenewalCount to know the renewal success rate"
              },
              "paidDunningCount": {
                "type": "integer",
                "description": "Number of paid dunned subscriptions. Divide by allDunningCount to know the dun success rate"
              },
              "refundedRenewalCount": {
                "type": "integer",
                "description": "Number of paid renewed subscriptions. Divide by allRenewalCount to know the renewal refund rate"
              },
              "refundedDunningCount": {
                "type": "integer",
                "description": "Number of paid dunned subscriptions. Divide by allDunningCount to know the dun refund rate"
              },
              "chargebackRenewalCount": {
                "type": "integer",
                "description": "Number of paid renewed subscriptions. Divide by allRenewalCount to know the renewal chargeback rate"
              },
              "chargebackDunningCount": {
                "type": "integer",
                "description": "Number of paid dunned subscriptions. Divide by allDunningCount to know the dun chargeback rate"
              }
            }
          }
        }
      }
    },
    "SubscriptionRenewalList": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Contains a renewal data",
        "readOnly": true,
        "properties": {
          "invoiceId": {
            "description": "Invoice ID",
            "allOf": [
              {
                "$ref": "#/definitions/ResourceId"
              }
            ]
          },
          "planId": {
            "description": "Plan ID",
            "allOf": [
              {
                "$ref": "#/definitions/ResourceId"
              }
            ]
          },
          "subscriptionId": {
            "description": "Subscription ID",
            "allOf": [
              {
                "$ref": "#/definitions/ResourceId"
              }
            ]
          },
          "customerId": {
            "description": "Customer ID",
            "allOf": [
              {
                "$ref": "#/definitions/ResourceId"
              }
            ]
          },
          "paymentId": {
            "description": "Payment ID",
            "allOf": [
              {
                "$ref": "#/definitions/ResourceId"
              }
            ]
          },
          "createdTime": {
            "description": "Invoice created time",
            "allOf": [
              {
                "$ref": "#/definitions/ServerTimestamp"
              }
            ]
          },
          "issuedTime": {
            "description": "Invoice issuing time",
            "allOf": [
              {
                "$ref": "#/definitions/ServerTimestamp"
              }
            ]
          },
          "dueTime": {
            "description": "Invoice due time",
            "allOf": [
              {
                "$ref": "#/definitions/ServerTimestamp"
              }
            ]
          },
          "closedTime": {
            "description": "Invoice closing time",
            "allOf": [
              {
                "$ref": "#/definitions/ServerTimestamp"
              }
            ]
          },
          "canceledTime": {
            "description": "Invoice canceling time",
            "allOf": [
              {
                "$ref": "#/definitions/ServerTimestamp"
              }
            ]
          },
          "recurringAmount": {
            "type": "number",
            "format": "double",
            "description": "Recurring amount of the related plan"
          },
          "recurringCurrency": {
            "type": "string",
            "description": "Recurring currency of the related plan"
          },
          "rebillNumber": {
            "type": "integer",
            "description": "Number of rebill cycle of the renewal"
          },
          "paymentDunningIndex": {
            "type": "integer",
            "description": "Dunning index of the related payment"
          },
          "isInitial": {
            "type": "boolean",
            "description": "Whether it is the first renewal of the subscription or not"
          },
          "refund": {
            "type": "object",
            "description": "Contains data for the related refund transaction if it exists",
            "readOnly": true,
            "properties": {
              "transactionId": {
                "description": "Refund transaction ID",
                "allOf": [
                  {
                    "$ref": "#/definitions/ResourceId"
                  }
                ]
              },
              "transactionCreatedTime": {
                "description": "Refund transaction creation time",
                "allOf": [
                  {
                    "$ref": "#/definitions/ServerTimestamp"
                  }
                ]
              }
            }
          },
          "chargeback": {
            "type": "object",
            "description": "Contains data for the related chargeback (dispute) if it exists",
            "readOnly": true,
            "properties": {
              "disputeId": {
                "description": "Dispute ID",
                "allOf": [
                  {
                    "$ref": "#/definitions/ResourceId"
                  }
                ]
              },
              "disputeCreatedTime": {
                "description": "Dispute creation time",
                "allOf": [
                  {
                    "$ref": "#/definitions/ServerTimestamp"
                  }
                ]
              }
            }
          },
          "lead": {
            "type": "object",
            "description": "Related lead source if it exists",
            "readOnly": true,
            "properties": {
              "medium": {
                "type": "string",
                "description": "Medium of the lead source"
              },
              "source": {
                "type": "string",
                "description": "Source of the lead source"
              },
              "campaign": {
                "type": "string",
                "description": "Campaign of the lead source"
              },
              "content": {
                "type": "string",
                "description": "Content of the lead source"
              },
              "term": {
                "type": "string",
                "description": "Term of the lead source"
              },
              "affiliate": {
                "type": "string",
                "description": "Affiliate of the lead source"
              },
              "subAffiliate": {
                "type": "string",
                "description": "SubAffiliate of the lead source"
              },
              "salesAgent": {
                "type": "string",
                "description": "SalesAgent of the lead source"
              },
              "createdTime": {
                "description": "Lead source creation time",
                "allOf": [
                  {
                    "$ref": "#/definitions/ServerTimestamp"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "SubscriptionSummaryMetrics": {
      "type": "object",
      "properties": {
        "currency": {
          "description": "Currency (three letter ISO 4217 alpha code) (eg USD, EUR)",
          "readOnly": true,
          "type": "string"
        },
        "invoicedAmount": {
          "description": "Sum of all issued, past due, or paid invoices",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "collectedAmount": {
          "description": "Sum of all paid invoices",
          "readOnly": true,
          "type": "number",
          "format": "double"
        },
        "invoiceCount": {
          "description": "Number of issued, past due, or paid invoices",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "TimeSeriesTransaction": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Contains an aggregation",
            "readOnly": true,
            "properties": {
              "date": {
                "type": "string",
                "description": "Date in format YYYY-MM-DD"
              },
              "total": {
                "type": "number",
                "format": "double",
                "description": "Amount or count of all transactions within the aggregation"
              },
              "subaggregates": {
                "type": "object",
                "description": "Subaggregates which have appropriate transactions within the range",
                "properties": {
                  "subaggregate": {
                    "type": "string",
                    "description": "Subaggregate identifier"
                  },
                  "value": {
                    "type": "number",
                    "format": "double",
                    "description": "Amount or count of the subaggregate's transactions within the aggregation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "TransactionsPlan": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Contains transaction's data",
        "readOnly": true,
        "properties": {
          "transactionId": {
            "description": "Transaction's identifier",
            "allOf": [
              {
                "$ref": "#/definitions/ResourceId"
              }
            ]
          },
          "websiteId": {
            "description": "Website's identifier",
            "allOf": [
              {
                "$ref": "#/definitions/ResourceId"
              }
            ]
          },
          "customerId": {
            "description": "Customer's identifier",
            "allOf": [
              {
                "$ref": "#/definitions/ResourceId"
              }
            ]
          },
          "customerEmail": {
            "type": "string",
            "description": "Customer's email"
          },
          "planId": {
            "description": "Plan's identifier",
            "allOf": [
              {
                "$ref": "#/definitions/ResourceId"
              }
            ]
          },
          "subscriptionId": {
            "description": "Subscription's identifier",
            "allOf": [
              {
                "$ref": "#/definitions/ResourceId"
              }
            ]
          },
          "currency": {
            "type": "string",
            "description": "Transaction's currency 3-letters code"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "Transaction's amount"
          },
          "rebillNumber": {
            "type": "integer",
            "description": "Transaction's rebill number"
          },
          "createdTime": {
            "description": "Transaction's created time",
            "allOf": [
              {
                "$ref": "#/definitions/ServerTimestamp"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "Transaction's type",
            "enum": [
              "authorize",
              "capture",
              "credit",
              "refund",
              "sale",
              "void"
            ]
          },
          "result": {
            "type": "string",
            "description": "Transaction's result",
            "enum": [
              "approved",
              "connection-error",
              "declined",
              "never-sent",
              "pending",
              "pending-processor",
              "timeout",
              "unknown"
            ]
          },
          "gatewayTransactionId": {
            "type": "string",
            "description": "Gateway's own transaction identifier"
          },
          "paymentType": {
            "type": "string",
            "enum": [
              "payment_card",
              "ach",
              "paypal",
              "china_unionpay",
              "ochapay"
            ],
            "description": "Type of payment"
          }
        }
      }
    }
  }
}
